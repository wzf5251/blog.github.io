<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Docker相关</title>
    <url>/posts/426220f4/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Excel导入导出</title>
    <url>/posts/48932efb/</url>
    <content><![CDATA[<p>Excel的导入与导出代码实现步骤一站式完成</p>
<span id="more"></span>

<h6 id="需要的Maven依赖"><a href="#需要的Maven依赖" class="headerlink" title="需要的Maven依赖"></a>需要的Maven依赖</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- 文件上传 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;httpmime&lt;/artifactId&gt;</span><br><span class="line">	&lt;version&gt;4.5.7&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- JSON --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.2.41&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- POI --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.16&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<h6 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFDataValidation;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.poifs.filesystem.POIFSFileSystem;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.ClientAnchor.AnchorType;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddressList;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.streaming.SXSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFClientAnchor;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.math.RoundingMode;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.text.NumberFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Map.Entry;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;unused&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExcelUtils</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">XLSX</span> <span class="operator">=</span> <span class="string">&quot;.xlsx&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">XLS</span> <span class="operator">=</span> <span class="string">&quot;.xls&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ROW_MERGE</span> <span class="operator">=</span> <span class="string">&quot;row_merge&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">COLUMN_MERGE</span> <span class="operator">=</span> <span class="string">&quot;column_merge&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DATE_FORMAT</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ROW_NUM</span> <span class="operator">=</span> <span class="string">&quot;rowNum&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ROW_DATA</span> <span class="operator">=</span> <span class="string">&quot;rowData&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ROW_TIPS</span> <span class="operator">=</span> <span class="string">&quot;rowTips&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">CELL_OTHER</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">CELL_ROW_MERGE</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">CELL_COLUMN_MERGE</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">IMG_HEIGHT</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">IMG_WIDTH</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">char</span> <span class="variable">LEAN_LINE</span> <span class="operator">=</span> <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">BYTES_DEFAULT_LENGTH</span> <span class="operator">=</span> <span class="number">10240</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">NumberFormat</span> <span class="variable">NUMBER_FORMAT</span> <span class="operator">=</span> NumberFormat.getNumberInstance();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">readFile</span><span class="params">(File file, Class&lt;T&gt; clazz)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">JSONArray</span> <span class="variable">array</span> <span class="operator">=</span> readFile(file);</span><br><span class="line">        <span class="keyword">return</span> getBeanList(array, clazz);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">readMultipartFile</span><span class="params">(MultipartFile mFile, Class&lt;T&gt; clazz)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">JSONArray</span> <span class="variable">array</span> <span class="operator">=</span> readMultipartFile(mFile);</span><br><span class="line">        <span class="keyword">return</span> getBeanList(array, clazz);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONArray <span class="title function_">readFile</span><span class="params">(File file)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> readExcel(<span class="literal">null</span>, file);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONArray <span class="title function_">readMultipartFile</span><span class="params">(MultipartFile mFile)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> readExcel(mFile, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, JSONArray&gt; <span class="title function_">readFileManySheet</span><span class="params">(File file)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> readExcelManySheet(<span class="literal">null</span>, file);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, JSONArray&gt; <span class="title function_">readFileManySheet</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> readExcelManySheet(file, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">getBeanList</span><span class="params">(JSONArray array, Class&lt;T&gt; clazz)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        List&lt;T&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Map&lt;Integer, String&gt; uniqueMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.size(); i++) &#123;</span><br><span class="line">            list.add(getBean(clazz, array.getJSONObject(i), uniqueMap));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取每个对象的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">getBean</span><span class="params">(Class&lt;T&gt; c, JSONObject obj, Map&lt;Integer, String&gt; uniqueMap)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">T</span> <span class="variable">t</span> <span class="operator">=</span> c.newInstance();</span><br><span class="line">        Field[] fields = c.getDeclaredFields();</span><br><span class="line">        List&lt;String&gt; errMsgList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasRowTipsField</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">uniqueBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">rowNum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="comment">// 行号</span></span><br><span class="line">            <span class="keyword">if</span> (field.getName().equals(ROW_NUM)) &#123;</span><br><span class="line">                rowNum = obj.getInteger(ROW_NUM);</span><br><span class="line">                field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                field.set(t, rowNum);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 是否需要设置异常信息</span></span><br><span class="line">            <span class="keyword">if</span> (field.getName().equals(ROW_TIPS)) &#123;</span><br><span class="line">                hasRowTipsField = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 原始数据</span></span><br><span class="line">            <span class="keyword">if</span> (field.getName().equals(ROW_DATA)) &#123;</span><br><span class="line">                field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                field.set(t, obj.toString());</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 设置对应属性值</span></span><br><span class="line">            setFieldValue(t, field, obj, uniqueBuilder, errMsgList);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 数据唯一性校验</span></span><br><span class="line">        <span class="keyword">if</span> (uniqueBuilder.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (uniqueMap.containsValue(uniqueBuilder.toString())) &#123;</span><br><span class="line">                Set&lt;Integer&gt; rowNumKeys = uniqueMap.keySet();</span><br><span class="line">                <span class="keyword">for</span> (Integer num : rowNumKeys) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (uniqueMap.get(num).equals(uniqueBuilder.toString())) &#123;</span><br><span class="line">                        errMsgList.add(String.format(<span class="string">&quot;数据唯一性校验失败,(%s)与第%s行重复)&quot;</span>, uniqueBuilder, num));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                uniqueMap.put(rowNum, uniqueBuilder.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 失败处理</span></span><br><span class="line">        <span class="keyword">if</span> (errMsgList.isEmpty() &amp;&amp; !hasRowTipsField) &#123;</span><br><span class="line">            <span class="keyword">return</span> t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> errMsgList.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == size - <span class="number">1</span>) &#123;</span><br><span class="line">                sb.append(errMsgList.get(i));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sb.append(errMsgList.get(i)).append(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置错误信息</span></span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="keyword">if</span> (field.getName().equals(ROW_TIPS)) &#123;</span><br><span class="line">                field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                field.set(t, sb.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(T t, Field field, JSONObject obj, StringBuilder uniqueBuilder, List&lt;String&gt; errMsgList)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取 ExcelImport 注解属性</span></span><br><span class="line">        <span class="type">ExcelImport</span> <span class="variable">annotation</span> <span class="operator">=</span> field.getAnnotation(ExcelImport.class);</span><br><span class="line">        <span class="keyword">if</span> (annotation == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cname</span> <span class="operator">=</span> annotation.value();</span><br><span class="line">        <span class="keyword">if</span> (cname.trim().length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取具体值</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">val</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (obj.containsKey(cname)) &#123;</span><br><span class="line">            val = getString(obj.getString(cname));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (val == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 判断是否必填</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">require</span> <span class="operator">=</span> annotation.required();</span><br><span class="line">        <span class="keyword">if</span> (require &amp;&amp; val.isEmpty()) &#123;</span><br><span class="line">            errMsgList.add(String.format(<span class="string">&quot;[%s]不能为空&quot;</span>, cname));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 数据唯一性获取</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">unique</span> <span class="operator">=</span> annotation.unique();</span><br><span class="line">        <span class="keyword">if</span> (unique) &#123;</span><br><span class="line">            <span class="keyword">if</span> (uniqueBuilder.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                uniqueBuilder.append(<span class="string">&quot;--&quot;</span>).append(val);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                uniqueBuilder.append(val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判断是否超过最大长度</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">maxLength</span> <span class="operator">=</span> annotation.maxLength();</span><br><span class="line">        <span class="keyword">if</span> (maxLength &gt; <span class="number">0</span> &amp;&amp; val.length() &gt; maxLength) &#123;</span><br><span class="line">            errMsgList.add(String.format(<span class="string">&quot;[%s]长度不能超过%s个字符(当前%s个字符)&quot;</span>, cname, maxLength, val.length()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判断当前属性是否有映射关系</span></span><br><span class="line">        LinkedHashMap&lt;String, String&gt; kvMap = getKvMap(annotation.kv());</span><br><span class="line">        <span class="keyword">if</span> (!kvMap.isEmpty()) &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">isMatch</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (String key : kvMap.keySet()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (kvMap.get(key).equals(val)) &#123;</span><br><span class="line">                    val = key;</span><br><span class="line">                    isMatch = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!isMatch) &#123;</span><br><span class="line">                errMsgList.add(String.format(<span class="string">&quot;[%s]的值不正确(当前值为%s)&quot;</span>, cname, val));</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 其余情况根据类型赋值</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">fieldClassName</span> <span class="operator">=</span> field.getType().getSimpleName();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;String&quot;</span>.equalsIgnoreCase(fieldClassName)) &#123;</span><br><span class="line">                field.set(t, val);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;boolean&quot;</span>.equalsIgnoreCase(fieldClassName)) &#123;</span><br><span class="line">                field.set(t, Boolean.valueOf(val));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;int&quot;</span>.equalsIgnoreCase(fieldClassName) || <span class="string">&quot;Integer&quot;</span>.equals(fieldClassName)) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    field.set(t, Integer.valueOf(val));</span><br><span class="line">                &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                    errMsgList.add(String.format(<span class="string">&quot;[%s]的值格式不正确(当前值为%s)&quot;</span>, cname, val));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;double&quot;</span>.equalsIgnoreCase(fieldClassName)) &#123;</span><br><span class="line">                field.set(t, Double.valueOf(val));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;long&quot;</span>.equalsIgnoreCase(fieldClassName)) &#123;</span><br><span class="line">                field.set(t, Long.valueOf(val));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;BigDecimal&quot;</span>.equalsIgnoreCase(fieldClassName)) &#123;</span><br><span class="line">                field.set(t, <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(val));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;Date&quot;</span>.equalsIgnoreCase(fieldClassName)) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    field.set(t, <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).parse(val));</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    field.set(t, <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>).parse(val));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, JSONArray&gt; <span class="title function_">readExcelManySheet</span><span class="params">(MultipartFile mFile, File file)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">Workbook</span> <span class="variable">book</span> <span class="operator">=</span> getWorkbook(mFile, file);</span><br><span class="line">        <span class="keyword">if</span> (book == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyMap();</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;String, JSONArray&gt; map = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; book.getNumberOfSheets(); i++) &#123;</span><br><span class="line">            <span class="type">Sheet</span> <span class="variable">sheet</span> <span class="operator">=</span> book.getSheetAt(i);</span><br><span class="line">            <span class="type">JSONArray</span> <span class="variable">arr</span> <span class="operator">=</span> readSheet(sheet);</span><br><span class="line">            map.put(sheet.getSheetName(), arr);</span><br><span class="line">        &#125;</span><br><span class="line">        book.close();</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JSONArray <span class="title function_">readExcel</span><span class="params">(MultipartFile mFile, File file)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">Workbook</span> <span class="variable">book</span> <span class="operator">=</span> getWorkbook(mFile, file);</span><br><span class="line">        <span class="keyword">if</span> (book == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">JSONArray</span> <span class="variable">array</span> <span class="operator">=</span> readSheet(book.getSheetAt(<span class="number">0</span>));</span><br><span class="line">        book.close();</span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Workbook <span class="title function_">getWorkbook</span><span class="params">(MultipartFile mFile, File file)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">fileNotExist</span> <span class="operator">=</span> (file == <span class="literal">null</span> || !file.exists());</span><br><span class="line">        <span class="keyword">if</span> (mFile == <span class="literal">null</span> &amp;&amp; fileNotExist) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 解析表格数据</span></span><br><span class="line">        InputStream in;</span><br><span class="line">        String fileName;</span><br><span class="line">        <span class="keyword">if</span> (mFile != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 上传文件解析</span></span><br><span class="line">            in = mFile.getInputStream();</span><br><span class="line">            fileName = getString(mFile.getOriginalFilename()).toLowerCase();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 本地文件解析</span></span><br><span class="line">            in = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">            fileName = file.getName().toLowerCase();</span><br><span class="line">        &#125;</span><br><span class="line">        Workbook book;</span><br><span class="line">        <span class="keyword">if</span> (fileName.endsWith(XLSX)) &#123;</span><br><span class="line">            book = <span class="keyword">new</span> <span class="title class_">XSSFWorkbook</span>(in);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fileName.endsWith(XLS)) &#123;</span><br><span class="line">            <span class="type">POIFSFileSystem</span> <span class="variable">poifsFileSystem</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POIFSFileSystem</span>(in);</span><br><span class="line">            book = <span class="keyword">new</span> <span class="title class_">HSSFWorkbook</span>(poifsFileSystem);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        in.close();</span><br><span class="line">        <span class="keyword">return</span> book;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JSONArray <span class="title function_">readSheet</span><span class="params">(Sheet sheet)</span> &#123;</span><br><span class="line">        <span class="comment">// 首行下标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">rowStart</span> <span class="operator">=</span> sheet.getFirstRowNum();</span><br><span class="line">        <span class="comment">// 尾行下标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">rowEnd</span> <span class="operator">=</span> sheet.getLastRowNum();</span><br><span class="line">        <span class="comment">// 获取表头行</span></span><br><span class="line">        <span class="type">Row</span> <span class="variable">headRow</span> <span class="operator">=</span> sheet.getRow(rowStart);</span><br><span class="line">        <span class="keyword">if</span> (headRow == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cellStart</span> <span class="operator">=</span> headRow.getFirstCellNum();</span><br><span class="line">        <span class="type">int</span> <span class="variable">cellEnd</span> <span class="operator">=</span> headRow.getLastCellNum();</span><br><span class="line">        Map&lt;Integer, String&gt; keyMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> cellStart; j &lt; cellEnd; j++) &#123;</span><br><span class="line">            <span class="comment">// 获取表头数据</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">val</span> <span class="operator">=</span> getCellValue(headRow.getCell(j));</span><br><span class="line">            <span class="keyword">if</span> (val != <span class="literal">null</span> &amp;&amp; val.trim().length() != <span class="number">0</span>) &#123;</span><br><span class="line">                keyMap.put(j, val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果表头没有数据则不进行解析</span></span><br><span class="line">        <span class="keyword">if</span> (keyMap.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> (JSONArray) Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取每行JSON对象的值</span></span><br><span class="line">        <span class="type">JSONArray</span> <span class="variable">array</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">        <span class="comment">// 如果首行与尾行相同，表明只有一行，返回表头数据</span></span><br><span class="line">        <span class="keyword">if</span> (rowStart == rowEnd) &#123;</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">            <span class="comment">// 添加行号</span></span><br><span class="line">            obj.put(ROW_NUM, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i : keyMap.keySet()) &#123;</span><br><span class="line">                obj.put(keyMap.get(i), <span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            array.add(obj);</span><br><span class="line">            <span class="keyword">return</span> array;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> rowStart + <span class="number">1</span>; i &lt;= rowEnd; i++) &#123;</span><br><span class="line">            <span class="type">Row</span> <span class="variable">eachRow</span> <span class="operator">=</span> sheet.getRow(i);</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">            <span class="comment">// 添加行号</span></span><br><span class="line">            obj.put(ROW_NUM, i + <span class="number">1</span>);</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> cellStart; k &lt; cellEnd; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (eachRow != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">val</span> <span class="operator">=</span> getCellValue(eachRow.getCell(k));</span><br><span class="line">                    <span class="comment">// 所有数据添加到里面，用于判断该行是否为空</span></span><br><span class="line">                    sb.append(val);</span><br><span class="line">                    obj.put(keyMap.get(k), val);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (sb.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                array.add(obj);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getCellValue</span><span class="params">(Cell cell)</span> &#123;</span><br><span class="line">        <span class="comment">// 空白或空</span></span><br><span class="line">        <span class="keyword">if</span> (cell == <span class="literal">null</span> || cell.getCellTypeEnum() == CellType.BLANK) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// String类型</span></span><br><span class="line">        <span class="keyword">if</span> (cell.getCellTypeEnum() == CellType.STRING) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">val</span> <span class="operator">=</span> cell.getStringCellValue();</span><br><span class="line">            <span class="keyword">if</span> (val == <span class="literal">null</span> || val.trim().length() == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> val.trim();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 数字类型</span></span><br><span class="line">        <span class="keyword">if</span> (cell.getCellTypeEnum() == CellType.NUMERIC) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> cell.getNumericCellValue() + <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="comment">// 去掉尾巴上的小数点0</span></span><br><span class="line">            <span class="keyword">if</span> (Pattern.matches(<span class="string">&quot;.*\\.0*&quot;</span>, s)) &#123;</span><br><span class="line">                <span class="keyword">return</span> s.split(<span class="string">&quot;\\.&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> s;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 布尔值类型</span></span><br><span class="line">        <span class="keyword">if</span> (cell.getCellTypeEnum() == CellType.BOOLEAN) &#123;</span><br><span class="line">            <span class="keyword">return</span> cell.getBooleanCellValue() + <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 错误类型</span></span><br><span class="line">        <span class="keyword">return</span> cell.getCellFormula();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">exportTemplate</span><span class="params">(HttpServletResponse response, String fileName, Class&lt;T&gt; clazz)</span> &#123;</span><br><span class="line">        exportTemplate(response, fileName, fileName, clazz, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">exportTemplate</span><span class="params">(HttpServletResponse response, String fileName, String sheetName,</span></span><br><span class="line"><span class="params">                                          Class&lt;T&gt; clazz)</span> &#123;</span><br><span class="line">        exportTemplate(response, fileName, sheetName, clazz, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">exportTemplate</span><span class="params">(HttpServletResponse response, String fileName, Class&lt;T&gt; clazz,</span></span><br><span class="line"><span class="params">                                          <span class="type">boolean</span> isContainExample)</span> &#123;</span><br><span class="line">        exportTemplate(response, fileName, fileName, clazz, isContainExample);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">exportTemplate</span><span class="params">(HttpServletResponse response, String fileName, String sheetName,</span></span><br><span class="line"><span class="params">                                          Class&lt;T&gt; clazz, <span class="type">boolean</span> isContainExample)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取表头字段</span></span><br><span class="line">        List&lt;ExcelClassField&gt; headFieldList = getExcelClassFieldList(clazz);</span><br><span class="line">        <span class="comment">// 获取表头数据和示例数据</span></span><br><span class="line">        List&lt;List&lt;Object&gt;&gt; sheetDataList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Object&gt; headList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Object&gt; exampleList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Map&lt;Integer, List&lt;String&gt;&gt; selectMap = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; headFieldList.size(); i++) &#123;</span><br><span class="line">            <span class="type">ExcelClassField</span> <span class="variable">each</span> <span class="operator">=</span> headFieldList.get(i);</span><br><span class="line">            headList.add(each.getName());</span><br><span class="line">            exampleList.add(each.getExample());</span><br><span class="line">            LinkedHashMap&lt;String, String&gt; kvMap = each.getKvMap();</span><br><span class="line">            <span class="keyword">if</span> (kvMap != <span class="literal">null</span> &amp;&amp; kvMap.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                selectMap.put(i, <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(kvMap.values()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sheetDataList.add(headList);</span><br><span class="line">        <span class="keyword">if</span> (isContainExample) &#123;</span><br><span class="line">            sheetDataList.add(exampleList);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 导出数据</span></span><br><span class="line">        export(response, fileName, sheetName, sheetDataList, selectMap);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T&gt; List&lt;ExcelClassField&gt; <span class="title function_">getExcelClassFieldList</span><span class="params">(Class&lt;T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="comment">// 解析所有字段</span></span><br><span class="line">        Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasExportAnnotation</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        Map&lt;Integer, List&lt;ExcelClassField&gt;&gt; map = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        List&lt;Integer&gt; sortList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="type">ExcelClassField</span> <span class="variable">cf</span> <span class="operator">=</span> getExcelClassField(field);</span><br><span class="line">            <span class="keyword">if</span> (cf.getHasAnnotation() == <span class="number">1</span>) &#123;</span><br><span class="line">                hasExportAnnotation = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> <span class="variable">sort</span> <span class="operator">=</span> cf.getSort();</span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(sort)) &#123;</span><br><span class="line">                map.get(sort).add(cf);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                List&lt;ExcelClassField&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                list.add(cf);</span><br><span class="line">                sortList.add(sort);</span><br><span class="line">                map.put(sort, list);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(sortList);</span><br><span class="line">        <span class="comment">// 获取表头</span></span><br><span class="line">        List&lt;ExcelClassField&gt; headFieldList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (hasExportAnnotation) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Integer sort : sortList) &#123;</span><br><span class="line">                <span class="keyword">for</span> (ExcelClassField cf : map.get(sort)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (cf.getHasAnnotation() == <span class="number">1</span>) &#123;</span><br><span class="line">                        headFieldList.add(cf);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            headFieldList.addAll(map.get(<span class="number">0</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> headFieldList;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ExcelClassField <span class="title function_">getExcelClassField</span><span class="params">(Field field)</span> &#123;</span><br><span class="line">        <span class="type">ExcelClassField</span> <span class="variable">cf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExcelClassField</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">fieldName</span> <span class="operator">=</span> field.getName();</span><br><span class="line">        cf.setFieldName(fieldName);</span><br><span class="line">        <span class="type">ExcelExport</span> <span class="variable">annotation</span> <span class="operator">=</span> field.getAnnotation(ExcelExport.class);</span><br><span class="line">        <span class="comment">// 无 ExcelExport 注解情况</span></span><br><span class="line">        <span class="keyword">if</span> (annotation == <span class="literal">null</span>) &#123;</span><br><span class="line">            cf.setHasAnnotation(<span class="number">0</span>);</span><br><span class="line">            cf.setName(fieldName);</span><br><span class="line">            cf.setSort(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span> cf;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 有 ExcelExport 注解情况</span></span><br><span class="line">        cf.setHasAnnotation(<span class="number">1</span>);</span><br><span class="line">        cf.setName(annotation.value());</span><br><span class="line">        <span class="type">String</span> <span class="variable">example</span> <span class="operator">=</span> getString(annotation.example());</span><br><span class="line">        <span class="keyword">if</span> (!example.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isNumeric(example) &amp;&amp; example.length() &lt; <span class="number">8</span>) &#123;</span><br><span class="line">                cf.setExample(Double.valueOf(example));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                cf.setExample(example);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cf.setExample(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        cf.setSort(annotation.sort());</span><br><span class="line">        <span class="comment">// 解析映射</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">kv</span> <span class="operator">=</span> getString(annotation.kv());</span><br><span class="line">        cf.setKvMap(getKvMap(kv));</span><br><span class="line">        <span class="keyword">return</span> cf;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LinkedHashMap&lt;String, String&gt; <span class="title function_">getKvMap</span><span class="params">(String kv)</span> &#123;</span><br><span class="line">        LinkedHashMap&lt;String, String&gt; kvMap = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (kv.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> kvMap;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] kvs = kv.split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (kvs.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> kvMap;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (String each : kvs) &#123;</span><br><span class="line">            String[] eachKv = getString(each).split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (eachKv.length != <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">k</span> <span class="operator">=</span> eachKv[<span class="number">0</span>];</span><br><span class="line">            <span class="type">String</span> <span class="variable">v</span> <span class="operator">=</span> eachKv[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (k.isEmpty() || v.isEmpty()) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            kvMap.put(k, v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> kvMap;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出表格到本地</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file      本地文件对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheetData 导出数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">exportFile</span><span class="params">(File file, List&lt;List&lt;Object&gt;&gt; sheetData)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;文件创建失败&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sheetData == <span class="literal">null</span>) &#123;</span><br><span class="line">            sheetData = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;String, List&lt;List&lt;Object&gt;&gt;&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(file.getName(), sheetData);</span><br><span class="line">        export(<span class="literal">null</span>, file, file.getName(), map, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出表格到本地</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;      导出数据类似，和K类型保持一致</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath 文件父路径（如：D:/doc/excel/）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名称（不带尾缀，如：学生表）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list     导出数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException IO异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; File <span class="title function_">exportFile</span><span class="params">(String filePath, String fileName, List&lt;T&gt; list)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> getFile(filePath, fileName);</span><br><span class="line">        List&lt;List&lt;Object&gt;&gt; sheetData = getSheetData(list);</span><br><span class="line">        exportFile(file, sheetData);</span><br><span class="line">        <span class="keyword">return</span> file;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath filePath 文件父路径（如：D:/doc/excel/）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名称（不带尾缀，如：用户表）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 本地File文件对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> File <span class="title function_">getFile</span><span class="params">(String filePath, String fileName)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">dirPath</span> <span class="operator">=</span> getString(filePath);</span><br><span class="line">        String fileFullPath;</span><br><span class="line">        <span class="keyword">if</span> (dirPath.isEmpty()) &#123;</span><br><span class="line">            fileFullPath = fileName;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 判定文件夹是否存在，如果不存在，则级联创建</span></span><br><span class="line">            <span class="type">File</span> <span class="variable">dirFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dirPath);</span><br><span class="line">            <span class="keyword">if</span> (!dirFile.exists()) &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">mkdirs</span> <span class="operator">=</span> dirFile.mkdirs();</span><br><span class="line">                <span class="keyword">if</span> (!mkdirs) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取文件夹全名</span></span><br><span class="line">            <span class="keyword">if</span> (dirPath.endsWith(String.valueOf(LEAN_LINE))) &#123;</span><br><span class="line">                fileFullPath = dirPath + fileName + XLSX;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                fileFullPath = dirPath + LEAN_LINE + fileName + XLSX;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(fileFullPath);</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileFullPath);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> file.createNewFile();</span><br><span class="line">            <span class="keyword">if</span> (!result) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> file;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T&gt; List&lt;List&lt;Object&gt;&gt; <span class="title function_">getSheetData</span><span class="params">(List&lt;T&gt; list)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取表头字段</span></span><br><span class="line">        List&lt;ExcelClassField&gt; excelClassFieldList = getExcelClassFieldList(list.get(<span class="number">0</span>).getClass());</span><br><span class="line">        List&lt;String&gt; headFieldList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Object&gt; headList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Map&lt;String, ExcelClassField&gt; headFieldMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (ExcelClassField each : excelClassFieldList) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">fieldName</span> <span class="operator">=</span> each.getFieldName();</span><br><span class="line">            headFieldList.add(fieldName);</span><br><span class="line">            headFieldMap.put(fieldName, each);</span><br><span class="line">            headList.add(each.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 添加表头名称</span></span><br><span class="line">        List&lt;List&lt;Object&gt;&gt; sheetDataList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        sheetDataList.add(headList);</span><br><span class="line">        <span class="comment">// 获取表数据</span></span><br><span class="line">        <span class="keyword">for</span> (T t : list) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; fieldDataMap = getFieldDataMap(t);</span><br><span class="line">            Set&lt;String&gt; fieldDataKeys = fieldDataMap.keySet();</span><br><span class="line">            List&lt;Object&gt; rowList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (String headField : headFieldList) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!fieldDataKeys.contains(headField)) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">Object</span> <span class="variable">data</span> <span class="operator">=</span> fieldDataMap.get(headField);</span><br><span class="line">                <span class="keyword">if</span> (data == <span class="literal">null</span>) &#123;</span><br><span class="line">                    rowList.add(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">ExcelClassField</span> <span class="variable">cf</span> <span class="operator">=</span> headFieldMap.get(headField);</span><br><span class="line">                <span class="comment">// 判断是否有映射关系</span></span><br><span class="line">                LinkedHashMap&lt;String, String&gt; kvMap = cf.getKvMap();</span><br><span class="line">                <span class="keyword">if</span> (kvMap == <span class="literal">null</span> || kvMap.isEmpty()) &#123;</span><br><span class="line">                    rowList.add(data);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">String</span> <span class="variable">val</span> <span class="operator">=</span> kvMap.get(data.toString());</span><br><span class="line">                <span class="keyword">if</span> (isNumeric(val)) &#123;</span><br><span class="line">                    rowList.add(Double.valueOf(val));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    rowList.add(val);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            sheetDataList.add(rowList);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sheetDataList;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T&gt; Map&lt;String, Object&gt; <span class="title function_">getFieldDataMap</span><span class="params">(T t)</span> &#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Field[] fields = t.getClass().getDeclaredFields();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">fieldName</span> <span class="operator">=</span> field.getName();</span><br><span class="line">                field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> field.get(t);</span><br><span class="line">                map.put(fieldName, object);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException | IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">exportEmpty</span><span class="params">(HttpServletResponse response, String fileName)</span> &#123;</span><br><span class="line">        List&lt;List&lt;Object&gt;&gt; sheetDataList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Object&gt; headList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        headList.add(<span class="string">&quot;导出无数据&quot;</span>);</span><br><span class="line">        sheetDataList.add(headList);</span><br><span class="line">        export(response, fileName, sheetDataList);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">export</span><span class="params">(HttpServletResponse response, String fileName, List&lt;List&lt;Object&gt;&gt; sheetDataList)</span> &#123;</span><br><span class="line">        export(response, fileName, fileName, sheetDataList, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">exportManySheet</span><span class="params">(HttpServletResponse response, String fileName, Map&lt;String, List&lt;List&lt;Object&gt;&gt;&gt; sheetMap)</span> &#123;</span><br><span class="line">        export(response, <span class="literal">null</span>, fileName, sheetMap, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">export</span><span class="params">(HttpServletResponse response, String fileName, String sheetName,</span></span><br><span class="line"><span class="params">                              List&lt;List&lt;Object&gt;&gt; sheetDataList)</span> &#123;</span><br><span class="line">        export(response, fileName, sheetName, sheetDataList, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">export</span><span class="params">(HttpServletResponse response, String fileName, String sheetName,</span></span><br><span class="line"><span class="params">                              List&lt;List&lt;Object&gt;&gt; sheetDataList, Map&lt;Integer, List&lt;String&gt;&gt; selectMap)</span> &#123;</span><br><span class="line"> </span><br><span class="line">        Map&lt;String, List&lt;List&lt;Object&gt;&gt;&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(sheetName, sheetDataList);</span><br><span class="line">        export(response, <span class="literal">null</span>, fileName, map, selectMap);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T, K&gt; <span class="keyword">void</span> <span class="title function_">export</span><span class="params">(HttpServletResponse response, String fileName, List&lt;T&gt; list, Class&lt;K&gt; template)</span> &#123;</span><br><span class="line">        <span class="comment">// list 是否为空</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">lisIsEmpty</span> <span class="operator">=</span> list == <span class="literal">null</span> || list.isEmpty();</span><br><span class="line">        <span class="comment">// 如果模板数据为空，且导入的数据为空，则导出空文件</span></span><br><span class="line">        <span class="keyword">if</span> (template == <span class="literal">null</span> &amp;&amp; lisIsEmpty) &#123;</span><br><span class="line">            exportEmpty(response, fileName);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果 list 数据，则导出模板数据</span></span><br><span class="line">        <span class="keyword">if</span> (lisIsEmpty) &#123;</span><br><span class="line">            exportTemplate(response, fileName, template);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 导出数据</span></span><br><span class="line">        List&lt;List&lt;Object&gt;&gt; sheetDataList = getSheetData(list);</span><br><span class="line">        export(response, fileName, sheetDataList);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">export</span><span class="params">(HttpServletResponse response, String fileName, List&lt;List&lt;Object&gt;&gt; sheetDataList, Map&lt;Integer, List&lt;String&gt;&gt; selectMap)</span> &#123;</span><br><span class="line">        export(response, fileName, fileName, sheetDataList, selectMap);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">export</span><span class="params">(HttpServletResponse response, File file, String fileName,</span></span><br><span class="line"><span class="params">                               Map&lt;String, List&lt;List&lt;Object&gt;&gt;&gt; sheetMap, Map&lt;Integer, List&lt;String&gt;&gt; selectMap)</span> &#123;</span><br><span class="line">        <span class="comment">// 整个 Excel 表格 book 对象</span></span><br><span class="line">        <span class="type">SXSSFWorkbook</span> <span class="variable">book</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SXSSFWorkbook</span>();</span><br><span class="line">        <span class="comment">// 每个 Sheet 页</span></span><br><span class="line">        Set&lt;Entry&lt;String, List&lt;List&lt;Object&gt;&gt;&gt;&gt; entries = sheetMap.entrySet();</span><br><span class="line">        <span class="keyword">for</span> (Entry&lt;String, List&lt;List&lt;Object&gt;&gt;&gt; entry : entries) &#123;</span><br><span class="line">            List&lt;List&lt;Object&gt;&gt; sheetDataList = entry.getValue();</span><br><span class="line">            <span class="type">Sheet</span> <span class="variable">sheet</span> <span class="operator">=</span> book.createSheet(entry.getKey());</span><br><span class="line">            Drawing&lt;?&gt; patriarch = sheet.createDrawingPatriarch();</span><br><span class="line">            <span class="comment">// 设置表头背景色（灰色）</span></span><br><span class="line">            <span class="type">CellStyle</span> <span class="variable">headStyle</span> <span class="operator">=</span> book.createCellStyle();</span><br><span class="line">            headStyle.setFillForegroundColor(IndexedColors.GREY_80_PERCENT.index);</span><br><span class="line">            headStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);</span><br><span class="line">            headStyle.setAlignment(HorizontalAlignment.CENTER);</span><br><span class="line">            headStyle.setFillForegroundColor(IndexedColors.GREY_25_PERCENT.index);</span><br><span class="line">            <span class="comment">// 设置表身背景色（默认色）</span></span><br><span class="line">            <span class="type">CellStyle</span> <span class="variable">rowStyle</span> <span class="operator">=</span> book.createCellStyle();</span><br><span class="line">            rowStyle.setAlignment(HorizontalAlignment.CENTER);</span><br><span class="line">            rowStyle.setVerticalAlignment(VerticalAlignment.CENTER);</span><br><span class="line">            <span class="comment">// 设置表格列宽度（默认为15个字节）</span></span><br><span class="line">            sheet.setDefaultColumnWidth(<span class="number">15</span>);</span><br><span class="line">            <span class="comment">// 创建合并算法数组</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">rowLength</span> <span class="operator">=</span> sheetDataList.size();</span><br><span class="line">            <span class="type">int</span> <span class="variable">columnLength</span> <span class="operator">=</span> sheetDataList.get(<span class="number">0</span>).size();</span><br><span class="line">            <span class="type">int</span>[][] mergeArray = <span class="keyword">new</span> <span class="title class_">int</span>[rowLength][columnLength];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; sheetDataList.size(); i++) &#123;</span><br><span class="line">                <span class="comment">// 每个 Sheet 页中的行数据</span></span><br><span class="line">                <span class="type">Row</span> <span class="variable">row</span> <span class="operator">=</span> sheet.createRow(i);</span><br><span class="line">                List&lt;Object&gt; rowList = sheetDataList.get(i);</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; rowList.size(); j++) &#123;</span><br><span class="line">                    <span class="comment">// 每个行数据中的单元格数据</span></span><br><span class="line">                    <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> rowList.get(j);</span><br><span class="line">                    <span class="type">int</span> <span class="variable">v</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">if</span> (o <span class="keyword">instanceof</span> URL) &#123;</span><br><span class="line">                        <span class="comment">// 如果要导出图片的话, 链接需要传递 URL 对象</span></span><br><span class="line">                        setCellPicture(book, row, patriarch, i, j, (URL) o);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">Cell</span> <span class="variable">cell</span> <span class="operator">=</span> row.createCell(j);</span><br><span class="line">                        <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="comment">// 第一行为表头行，采用灰色底背景</span></span><br><span class="line">                            v = setCellValue(cell, o, headStyle);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="comment">// 其他行为数据行，默认白底色</span></span><br><span class="line">                            v = setCellValue(cell, o, rowStyle);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    mergeArray[i][j] = v;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 合并单元格</span></span><br><span class="line">            mergeCells(sheet, mergeArray);</span><br><span class="line">            <span class="comment">// 设置下拉列表</span></span><br><span class="line">            setSelect(sheet, selectMap);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 写数据</span></span><br><span class="line">        <span class="keyword">if</span> (response != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 前端导出</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                write(response, book, fileName);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 本地导出</span></span><br><span class="line">            FileOutputStream fos;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fos = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">                <span class="type">ByteArrayOutputStream</span> <span class="variable">ops</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">                book.write(ops);</span><br><span class="line">                fos.write(ops.toByteArray());</span><br><span class="line">                fos.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 合并当前Sheet页的单元格</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheet      当前 sheet 页</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mergeArray 合并单元格算法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mergeCells</span><span class="params">(Sheet sheet, <span class="type">int</span>[][] mergeArray)</span> &#123;</span><br><span class="line">        <span class="comment">// 横向合并</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; mergeArray.length; x++) &#123;</span><br><span class="line">            <span class="type">int</span>[] arr = mergeArray[x];</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">merge</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">y1</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">y2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>; y &lt; arr.length; y++) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> arr[y];</span><br><span class="line">                <span class="keyword">if</span> (value == CELL_COLUMN_MERGE) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!merge) &#123;</span><br><span class="line">                        y1 = y;</span><br><span class="line">                    &#125;</span><br><span class="line">                    y2 = y;</span><br><span class="line">                    merge = <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    merge = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">if</span> (y1 &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        sheet.addMergedRegion(<span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(x, x, (y1 - <span class="number">1</span>), y2));</span><br><span class="line">                    &#125;</span><br><span class="line">                    y1 = <span class="number">0</span>;</span><br><span class="line">                    y2 = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (y1 &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                sheet.addMergedRegion(<span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(x, x, (y1 - <span class="number">1</span>), y2));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 纵向合并</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">xLen</span> <span class="operator">=</span> mergeArray.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">yLen</span> <span class="operator">=</span> mergeArray[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>; y &lt; yLen; y++) &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">merge</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x1</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; xLen; x++) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> mergeArray[x][y];</span><br><span class="line">                <span class="keyword">if</span> (value == CELL_ROW_MERGE) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!merge) &#123;</span><br><span class="line">                        x1 = x;</span><br><span class="line">                    &#125;</span><br><span class="line">                    x2 = x;</span><br><span class="line">                    merge = <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    merge = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">if</span> (x1 &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        sheet.addMergedRegion(<span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>((x1 - <span class="number">1</span>), x2, y, y));</span><br><span class="line">                    &#125;</span><br><span class="line">                    x1 = <span class="number">0</span>;</span><br><span class="line">                    x2 = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (x1 &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                sheet.addMergedRegion(<span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>((x1 - <span class="number">1</span>), x2, y, y));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">(HttpServletResponse response, SXSSFWorkbook book, String fileName)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(fileName.getBytes(<span class="string">&quot;GBK&quot;</span>), <span class="string">&quot;ISO8859_1&quot;</span>) + XLSX;</span><br><span class="line">        response.addHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + name);</span><br><span class="line">        <span class="type">ServletOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">        book.write(out);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">setCellValue</span><span class="params">(Cell cell, Object o, CellStyle style)</span> &#123;</span><br><span class="line">        <span class="comment">// 设置样式</span></span><br><span class="line">        cell.setCellStyle(style);</span><br><span class="line">        <span class="comment">// 数据为空时</span></span><br><span class="line">        <span class="keyword">if</span> (o == <span class="literal">null</span>) &#123;</span><br><span class="line">            cell.setCellType(CellType.STRING);</span><br><span class="line">            cell.setCellValue(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> CELL_OTHER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 是否为字符串</span></span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> o.toString();</span><br><span class="line">            <span class="comment">// 当数字类型长度超过8位时，改为字符串类型显示（Excel数字超过一定长度会显示为科学计数法）</span></span><br><span class="line">            <span class="keyword">if</span> (isNumeric(s) &amp;&amp; s.length() &lt; <span class="number">8</span>) &#123;</span><br><span class="line">                cell.setCellType(CellType.NUMERIC);</span><br><span class="line">                cell.setCellValue(Double.parseDouble(s));</span><br><span class="line">                <span class="keyword">return</span> CELL_OTHER;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                cell.setCellType(CellType.STRING);</span><br><span class="line">                cell.setCellValue(s);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (s.equals(ROW_MERGE)) &#123;</span><br><span class="line">                <span class="keyword">return</span> CELL_ROW_MERGE;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s.equals(COLUMN_MERGE)) &#123;</span><br><span class="line">                <span class="keyword">return</span> CELL_COLUMN_MERGE;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> CELL_OTHER;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 是否为字符串</span></span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> Integer || o <span class="keyword">instanceof</span> Long || o <span class="keyword">instanceof</span> Double || o <span class="keyword">instanceof</span> Float) &#123;</span><br><span class="line">            cell.setCellType(CellType.NUMERIC);</span><br><span class="line">            cell.setCellValue(Double.parseDouble(o.toString()));</span><br><span class="line">            <span class="keyword">return</span> CELL_OTHER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 是否为Boolean</span></span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> Boolean) &#123;</span><br><span class="line">            cell.setCellType(CellType.BOOLEAN);</span><br><span class="line">            cell.setCellValue((Boolean) o);</span><br><span class="line">            <span class="keyword">return</span> CELL_OTHER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果是BigDecimal，则默认3位小数</span></span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> BigDecimal) &#123;</span><br><span class="line">            cell.setCellType(CellType.NUMERIC);</span><br><span class="line">            cell.setCellValue(((BigDecimal) o).setScale(<span class="number">3</span>, RoundingMode.HALF_UP).doubleValue());</span><br><span class="line">            <span class="keyword">return</span> CELL_OTHER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果是Date数据，则显示格式化数据</span></span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> Date) &#123;</span><br><span class="line">            cell.setCellType(CellType.STRING);</span><br><span class="line">            cell.setCellValue(formatDate((Date) o));</span><br><span class="line">            <span class="keyword">return</span> CELL_OTHER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果是其他，则默认字符串类型</span></span><br><span class="line">        cell.setCellType(CellType.STRING);</span><br><span class="line">        cell.setCellValue(o.toString());</span><br><span class="line">        <span class="keyword">return</span> CELL_OTHER;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setCellPicture</span><span class="params">(SXSSFWorkbook wb, Row sr, Drawing&lt;?&gt; patriarch, <span class="type">int</span> x, <span class="type">int</span> y, URL url)</span> &#123;</span><br><span class="line">        <span class="comment">// 设置图片宽高</span></span><br><span class="line">        sr.setHeight((<span class="type">short</span>) (IMG_WIDTH * IMG_HEIGHT));</span><br><span class="line">        <span class="comment">// （jdk1.7版本try中定义流可自动关闭）</span></span><br><span class="line">        <span class="keyword">try</span> (<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> url.openStream(); <span class="type">ByteArrayOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>()) &#123;</span><br><span class="line">            <span class="type">byte</span>[] buff = <span class="keyword">new</span> <span class="title class_">byte</span>[BYTES_DEFAULT_LENGTH];</span><br><span class="line">            <span class="type">int</span> rc;</span><br><span class="line">            <span class="keyword">while</span> ((rc = is.read(buff, <span class="number">0</span>, BYTES_DEFAULT_LENGTH)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                outputStream.write(buff, <span class="number">0</span>, rc);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 设置图片位置</span></span><br><span class="line">            <span class="type">XSSFClientAnchor</span> <span class="variable">anchor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XSSFClientAnchor</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, y, x, y + <span class="number">1</span>, x + <span class="number">1</span>);</span><br><span class="line">            <span class="comment">// 设置这个，图片会自动填满单元格的长宽</span></span><br><span class="line">            anchor.setAnchorType(AnchorType.MOVE_AND_RESIZE);</span><br><span class="line">            patriarch.createPicture(anchor, wb.addPicture(outputStream.toByteArray(), HSSFWorkbook.PICTURE_TYPE_JPEG));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">formatDate</span><span class="params">(Date date)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (date == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(DATE_FORMAT);</span><br><span class="line">        <span class="keyword">return</span> format.format(date);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setSelect</span><span class="params">(Sheet sheet, Map&lt;Integer, List&lt;String&gt;&gt; selectMap)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (selectMap == <span class="literal">null</span> || selectMap.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Set&lt;Entry&lt;Integer, List&lt;String&gt;&gt;&gt; entrySet = selectMap.entrySet();</span><br><span class="line">        <span class="keyword">for</span> (Entry&lt;Integer, List&lt;String&gt;&gt; entry : entrySet) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">            List&lt;String&gt; list = entry.getValue();</span><br><span class="line">            <span class="keyword">if</span> (list == <span class="literal">null</span> || list.isEmpty()) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            String[] arr = <span class="keyword">new</span> <span class="title class_">String</span>[list.size()];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">                arr[i] = list.get(i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">DataValidationHelper</span> <span class="variable">helper</span> <span class="operator">=</span> sheet.getDataValidationHelper();</span><br><span class="line">            <span class="type">CellRangeAddressList</span> <span class="variable">addressList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CellRangeAddressList</span>(<span class="number">1</span>, <span class="number">65000</span>, y, y);</span><br><span class="line">            <span class="type">DataValidationConstraint</span> <span class="variable">dvc</span> <span class="operator">=</span> helper.createExplicitListConstraint(arr);</span><br><span class="line">            <span class="type">DataValidation</span> <span class="variable">dv</span> <span class="operator">=</span> helper.createValidation(dvc, addressList);</span><br><span class="line">            <span class="keyword">if</span> (dv <span class="keyword">instanceof</span> HSSFDataValidation) &#123;</span><br><span class="line">                dv.setSuppressDropDownArrow(<span class="literal">false</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dv.setSuppressDropDownArrow(<span class="literal">true</span>);</span><br><span class="line">                dv.setShowErrorBox(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sheet.addValidationData(dv);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isNumeric</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (Objects.nonNull(str) &amp;&amp; <span class="string">&quot;0.0&quot;</span>.equals(str)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> str.length(); --i &gt;= <span class="number">0</span>; ) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!Character.isDigit(str.charAt(i))) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getString</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (s == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (s.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.trim();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="导入Excel的自定义注解"><a href="#导入Excel的自定义注解" class="headerlink" title="导入Excel的自定义注解"></a>导入Excel的自定义注解</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@Target(ElementType.FIELD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ExcelImport &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 字段名称 */</span></span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 导出映射，格式如：0-未知;1-男;2-女 */</span></span><br><span class="line">    String <span class="title function_">kv</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 是否为必填字段（默认为非必填） */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">required</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 最大长度（默认255） */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">maxLength</span><span class="params">()</span> <span class="keyword">default</span> <span class="number">255</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 导入唯一性验证（多个字段则取联合验证） */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">unique</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="Excel导出自定义注解"><a href="#Excel导出自定义注解" class="headerlink" title="Excel导出自定义注解"></a>Excel导出自定义注解</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@Target(ElementType.FIELD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ExcelExport &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 字段名称 */</span></span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 导出排序先后: 数字越小越靠前（默认按Java类字段顺序导出） */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">sort</span><span class="params">()</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 导出映射，格式如：0-未知;1-男;2-女 */</span></span><br><span class="line">    String <span class="title function_">kv</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 导出模板示例值（有值的话，直接取该值，不做映射） */</span></span><br><span class="line">    String <span class="title function_">example</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="Excel的实体类"><a href="#Excel的实体类" class="headerlink" title="Excel的实体类"></a>Excel的实体类</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zyq.util.excel;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExcelClassField</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 字段名称 */</span></span><br><span class="line">    <span class="keyword">private</span> String fieldName;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 表头名称 */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 映射关系 */</span></span><br><span class="line">    <span class="keyword">private</span> LinkedHashMap&lt;String, String&gt; kvMap;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 示例值 */</span></span><br><span class="line">    <span class="keyword">private</span> Object example;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 排序 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> sort;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 是否为注解字段：0-否，1-是 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> hasAnnotation;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getFieldName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> fieldName;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFieldName</span><span class="params">(String fieldName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.fieldName = fieldName;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> LinkedHashMap&lt;String, String&gt; <span class="title function_">getKvMap</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> kvMap;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setKvMap</span><span class="params">(LinkedHashMap&lt;String, String&gt; kvMap)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.kvMap = kvMap;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getExample</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> example;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setExample</span><span class="params">(Object example)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.example = example;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSort</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sort;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSort</span><span class="params">(<span class="type">int</span> sort)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sort = sort;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getHasAnnotation</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> hasAnnotation;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHasAnnotation</span><span class="params">(<span class="type">int</span> hasAnnotation)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.hasAnnotation = hasAnnotation;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>Java开发工具类</title>
    <url>/posts/3a8c70dd/</url>
    <content><![CDATA[<h6 id="1、MD5加密工具类"><a href="#1、MD5加密工具类" class="headerlink" title="1、MD5加密工具类"></a>1、MD5加密工具类</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">MD5</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encrypt</span><span class="params">(String strSrc)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">char</span> hexChars[] = &#123; <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span> &#125;;</span><br><span class="line">            <span class="type">byte</span>[] bytes = strSrc.getBytes();</span><br><span class="line">            <span class="type">MessageDigest</span> <span class="variable">md</span> <span class="operator">=</span> MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">            md.update(bytes);</span><br><span class="line">            bytes = md.digest();</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> bytes.length;</span><br><span class="line">            <span class="type">char</span>[] chars = <span class="keyword">new</span> <span class="title class_">char</span>[j * <span class="number">2</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; bytes.length; i++) &#123;</span><br><span class="line">                <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> bytes[i];</span><br><span class="line">                chars[k++] = hexChars[b &gt;&gt;&gt; <span class="number">4</span> &amp; <span class="number">0xf</span>];</span><br><span class="line">                chars[k++] = hexChars[b &amp; <span class="number">0xf</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(chars);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;MD5加密出错！！+&quot;</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h6 id="2、IP工具类"><a href="#2、IP工具类" class="headerlink" title="2、IP工具类"></a>2、IP工具类</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取ip地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IpUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getIpAddress</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ipAddress</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ipAddress = request.getHeader(<span class="string">&quot;x-forwarded-for&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (ipAddress == <span class="literal">null</span> || ipAddress.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ipAddress)) &#123;</span><br><span class="line">                ipAddress = request.getHeader(<span class="string">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ipAddress == <span class="literal">null</span> || ipAddress.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ipAddress)) &#123;</span><br><span class="line">                ipAddress = request.getHeader(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ipAddress == <span class="literal">null</span> || ipAddress.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ipAddress)) &#123;</span><br><span class="line">                ipAddress = request.getRemoteAddr();</span><br><span class="line">                <span class="keyword">if</span> (ipAddress.equals(<span class="string">&quot;127.0.0.1&quot;</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 根据网卡取本机配置的IP</span></span><br><span class="line">                    <span class="type">InetAddress</span> <span class="variable">inet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        inet = InetAddress.getLocalHost();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    ipAddress = inet.getHostAddress();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 对于通过多个代理的情况，第一个IP为客户端真实IP,多个IP按照&#x27;,&#x27;分割</span></span><br><span class="line">            <span class="keyword">if</span> (ipAddress != <span class="literal">null</span> &amp;&amp; ipAddress.length() &gt; <span class="number">15</span>) &#123; <span class="comment">// &quot;***.***.***.***&quot;.length()</span></span><br><span class="line">                <span class="comment">// = 15</span></span><br><span class="line">                <span class="keyword">if</span> (ipAddress.indexOf(<span class="string">&quot;,&quot;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    ipAddress = ipAddress.substring(<span class="number">0</span>, ipAddress.indexOf(<span class="string">&quot;,&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            ipAddress=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// ipAddress = this.getRequest().getRemoteAddr();</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ipAddress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 网关中获取Ip地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getGatwayIpAddress</span><span class="params">(ServerHttpRequest request)</span> &#123;</span><br><span class="line">        <span class="type">HttpHeaders</span> <span class="variable">headers</span> <span class="operator">=</span> request.getHeaders();</span><br><span class="line">        <span class="type">String</span> <span class="variable">ip</span> <span class="operator">=</span> headers.getFirst(<span class="string">&quot;x-forwarded-for&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (ip != <span class="literal">null</span> &amp;&amp; ip.length() != <span class="number">0</span> &amp;&amp; !<span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            <span class="comment">// 多次反向代理后会有多个ip值，第一个ip才是真实ip</span></span><br><span class="line">            <span class="keyword">if</span> (ip.indexOf(<span class="string">&quot;,&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">                ip = ip.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = headers.getFirst(<span class="string">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = headers.getFirst(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = headers.getFirst(<span class="string">&quot;HTTP_CLIENT_IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = headers.getFirst(<span class="string">&quot;HTTP_X_FORWARDED_FOR&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = headers.getFirst(<span class="string">&quot;X-Real-IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = request.getRemoteAddress().getAddress().getHostAddress();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ip;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="3、HttpClent工具类"><a href="#3、HttpClent工具类" class="headerlink" title="3、HttpClent工具类"></a>3、HttpClent工具类</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HttpClient类 微信：</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpClientUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doGet</span><span class="params">(String url)</span>   &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpclient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line">        <span class="comment">// 创建http GET请求</span></span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 执行请求</span></span><br><span class="line">            response = httpclient.execute(httpGet);</span><br><span class="line">            <span class="comment">// 判断返回状态是否为200</span></span><br><span class="line">            <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) &#123;</span><br><span class="line">                <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">                <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> EntityUtils.toString(entity, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                EntityUtils.consume(entity);</span><br><span class="line">                httpclient.close();</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">            httpclient.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>  <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">download</span><span class="params">(String url,String fileName)</span>   &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpclient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line">        <span class="comment">// 创建http GET请求</span></span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 执行请求</span></span><br><span class="line">            response = httpclient.execute(httpGet);</span><br><span class="line">            <span class="comment">// 判断返回状态是否为200</span></span><br><span class="line">            <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) &#123;</span><br><span class="line">                <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line"></span><br><span class="line">               <span class="comment">// String result = EntityUtils.toString(entity, &quot;UTF-8&quot;);</span></span><br><span class="line">                <span class="type">byte</span>[] bytes = EntityUtils.toByteArray(entity);</span><br><span class="line">                <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line">               <span class="comment">//  InputStream in = entity.getContent();</span></span><br><span class="line">                <span class="type">FileOutputStream</span> <span class="variable">fout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">                fout.write(bytes);</span><br><span class="line"></span><br><span class="line">                EntityUtils.consume(entity);</span><br><span class="line"></span><br><span class="line">                httpclient.close();</span><br><span class="line">                fout.flush();</span><br><span class="line">                fout.close();</span><br><span class="line">                <span class="keyword">return</span>  ;</span><br><span class="line">            &#125;</span><br><span class="line">            httpclient.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span>  ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>   ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="4、Date工具类"><a href="#4、Date工具类" class="headerlink" title="4、Date工具类"></a>4、Date工具类</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.lang.time.DateUtils;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日期操作工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">dateFormat</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取两个时间差 单位：秒</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">getTimeSubtract</span><span class="params">(Date date1, Date date2)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (date1.getTime() - date2.getTime()) / <span class="number">1000</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 格式化日期</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">formatDate</span><span class="params">(Date date)</span> &#123;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(dateFormat);</span><br><span class="line">        <span class="keyword">return</span> sdf.format(date);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 截取比较断两个日期对象的field处的值 。</span></span><br><span class="line"><span class="comment">     * 如果第一个日期小于、等于、大于第二个，则对应返回负整数、0、正整数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date1 第一个日期对象，非null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date2 第二个日期对象，非null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> field Calendar中的阈值</span></span><br><span class="line"><span class="comment">     *              &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *              date1 &gt; date2  返回：1</span></span><br><span class="line"><span class="comment">     *              date1 = date2  返回：0</span></span><br><span class="line"><span class="comment">     *              date1 &lt; date2  返回：-1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">truncatedCompareTo</span><span class="params">(<span class="keyword">final</span> Date date1, <span class="keyword">final</span> Date date2, <span class="keyword">final</span> <span class="type">int</span> field)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> DateUtils.truncatedCompareTo(date1, date2, field);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 比对时间大小</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> beginDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> endDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">dateCompare</span><span class="params">(Date beginDate, Date endDate)</span> &#123;</span><br><span class="line">        <span class="comment">// endDate &gt; beginDate</span></span><br><span class="line">        <span class="keyword">if</span> (DateUtil.truncatedCompareTo(beginDate, endDate, Calendar.SECOND) == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// beginDate  &lt;= endDate</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="5、Redis分布式锁-AOP实现"><a href="#5、Redis分布式锁-AOP实现" class="headerlink" title="5、Redis分布式锁+AOP实现"></a>5、Redis分布式锁+AOP实现</h6><p>​	①、先创建一个注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 元注解： 简单理解就是修饰注解的注解</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Target</span>: 用于描述注解的使用范围，简单理解就是当前注解可以用在什么地方</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Retention</span>: 表示注解的声明周期</span></span><br><span class="line"><span class="comment"> *             SOURCE:之存在类文件中，源码中，在class字节码不存在</span></span><br><span class="line"><span class="comment"> *             CLASS：存在到字节码文件中</span></span><br><span class="line"><span class="comment"> *             RUNTIME：运行时</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Inherited</span>: 继承 表示被GmallCache修饰的类的子类会不会继承GmallCache</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Documented</span>: 文档 javadoc指令可以生成文档</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123; ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> GmallCache &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//缓存的前缀</span></span><br><span class="line">    String <span class="title function_">prefix</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;cache:&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//缓存的后缀</span></span><br><span class="line">    String <span class="title function_">suffix</span><span class="params">()</span> <span class="keyword">default</span>  <span class="string">&quot;:info&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​	②、再创建一个切面类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.gmall.common.constant.RedisConst;</span><br><span class="line"><span class="keyword">import</span> jodd.util.StringUtil;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.redisson.api.RLock;</span><br><span class="line"><span class="keyword">import</span> org.redisson.api.RedissonClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> sun.applet.Main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GmallCacheAspect</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedissonClient redissonClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 使用aop实现分布式锁和缓存</span></span><br><span class="line"><span class="comment">     *  Around:环绕通知</span></span><br><span class="line"><span class="comment">     *    value:表示声明切入的位置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> joinPoint</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Throwable</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 1.定义获取数据的key</span></span><br><span class="line"><span class="comment">     *  例如：获取skuInfo    key ===sku:skuId</span></span><br><span class="line"><span class="comment">     *   (1)获取添加了<span class="doctag">@Gmallcache</span>注解的方法</span></span><br><span class="line"><span class="comment">     *      可以获取注解 可以获取注解的属性  可以获取方法的参数</span></span><br><span class="line"><span class="comment">     *   （2）可以尝试获取数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Around(&quot;@annotation(com.atguigu.gmall.common.cache.GmallCache)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">cacheGmallAspect</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">       <span class="comment">//创建返回对象</span></span><br><span class="line">        Object object=<span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">        <span class="comment">//获取添加了注解的方法</span></span><br><span class="line">        <span class="type">MethodSignature</span> <span class="variable">signature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">        <span class="comment">//获取注解</span></span><br><span class="line">        <span class="type">GmallCache</span> <span class="variable">gmallCache</span> <span class="operator">=</span> signature.getMethod().getAnnotation(GmallCache.class);</span><br><span class="line">        <span class="comment">//获取属性前缀</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">prefix</span> <span class="operator">=</span> gmallCache.prefix();</span><br><span class="line">        <span class="comment">//获取属性后缀</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">suffix</span> <span class="operator">=</span> gmallCache.suffix();</span><br><span class="line">        <span class="comment">//获取方法传入的参数</span></span><br><span class="line">        Object[] args = joinPoint.getArgs();</span><br><span class="line">        <span class="comment">//组合获取数据的key</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span>prefix+ Arrays.asList(args).toString()+suffix;</span><br><span class="line">        <span class="comment">//从缓存中获取数据</span></span><br><span class="line">        object=cacheHit(key,signature);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//判断</span></span><br><span class="line">            <span class="keyword">if</span>(object==<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="comment">//缓存中没有数据，需要从数据库查询</span></span><br><span class="line">                <span class="comment">//定义锁的key</span></span><br><span class="line">                String lockKey=prefix+<span class="string">&quot;:lock&quot;</span>;</span><br><span class="line">                <span class="comment">//准备上锁 redis redisson</span></span><br><span class="line">                <span class="type">RLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClient.getLock(lockKey);</span><br><span class="line">                <span class="comment">//上锁</span></span><br><span class="line">                <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> lock.tryLock(RedisConst.SKULOCK_EXPIRE_PX1,</span><br><span class="line">                        RedisConst.SKULOCK_EXPIRE_PX2, TimeUnit.SECONDS);</span><br><span class="line">                <span class="comment">//判断是否成功</span></span><br><span class="line">                <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="comment">//获取到了锁</span></span><br><span class="line">                        <span class="comment">//查询数据库，-执行切入的方法的方法体实际上就是查询数据库</span></span><br><span class="line">                        object= joinPoint.proceed(args);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//判断是否从mysql查询到了数据</span></span><br><span class="line">                        <span class="keyword">if</span>(object==<span class="literal">null</span>)&#123;</span><br><span class="line">                            <span class="comment">//创建空值</span></span><br><span class="line"><span class="comment">//                            object=new Object();</span></span><br><span class="line">                            <span class="comment">//反射-获取返回值类型的字节码对象</span></span><br><span class="line">                            <span class="type">Class</span> <span class="variable">aClass</span> <span class="operator">=</span> signature.getReturnType();</span><br><span class="line">                            <span class="comment">//创建对象</span></span><br><span class="line">                            object = aClass.newInstance();</span><br><span class="line">                           <span class="comment">//存储</span></span><br><span class="line">                            redisTemplate.opsForValue().set(key,JSON.toJSONString(object),</span><br><span class="line">                                    RedisConst.SKUKEY_TEMPORARY_TIMEOUT,TimeUnit.SECONDS);</span><br><span class="line">                            <span class="keyword">return</span> object;</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="comment">//存储</span></span><br><span class="line">                            redisTemplate.opsForValue().set(key,JSON.toJSONString(object),</span><br><span class="line">                                    RedisConst.SKUKEY_TEMPORARY_TIMEOUT,TimeUnit.SECONDS);</span><br><span class="line">                            <span class="keyword">return</span> object;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                        <span class="comment">//释放锁</span></span><br><span class="line">                        lock.unlock();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="comment">//睡眠</span></span><br><span class="line">                    Thread.sleep(<span class="number">100</span>);</span><br><span class="line">                    <span class="comment">//自旋</span></span><br><span class="line">                    <span class="keyword">return</span> cacheGmallAspect(joinPoint);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//从缓存中获取了数据</span></span><br><span class="line">                <span class="keyword">return</span> object;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            throwable.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//兜底的方法--查询数据库，实际上执行方法体就是查询数据库</span></span><br><span class="line">        <span class="keyword">return</span> joinPoint.proceed(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从缓存中获取数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> signature</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Object <span class="title function_">cacheHit</span><span class="params">(String key, MethodSignature signature)</span> &#123;</span><br><span class="line">        <span class="comment">//获取数据--存储的时候，转换成Json字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">strJson</span> <span class="operator">=</span> (String) redisTemplate.opsForValue().get(key);</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span>(!StringUtil.isEmpty(strJson))&#123;</span><br><span class="line">            <span class="comment">//获取当前方法的返回值类型</span></span><br><span class="line">            <span class="type">Class</span> <span class="variable">returnType</span> <span class="operator">=</span> signature.getReturnType();</span><br><span class="line">            <span class="comment">//将字符串转换成指定的类型</span></span><br><span class="line">            <span class="keyword">return</span> JSON.parseObject(strJson,returnType);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JUC相关</title>
    <url>/posts/b74c84c/</url>
    <content><![CDATA[<p>JUC并发容器</p>
<span id="more"></span>

<h5 id="ConcurrentHashMap"><a href="#ConcurrentHashMap" class="headerlink" title="ConcurrentHashMap"></a>ConcurrentHashMap</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.7：使用的是分段锁的技术Segment，最大并发个数就是Segment的个数也就是16个</span><br><span class="line">1.8：结构上是用了数组+链表+红黑树，锁粒度更细，理想情况下数组的长度就是支持的最大并发数，使用了Node+CAS+synchronized保证线程安全</span><br></pre></td></tr></table></figure>

<h5 id="CopyOnWriteArrayList"><a href="#CopyOnWriteArrayList" class="headerlink" title="CopyOnWriteArrayList"></a>CopyOnWriteArrayList</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">适用场景：读操作可以尽可能的快，写操作即使慢一些也没关系，读多写少。</span><br><span class="line"></span><br><span class="line">CopyOnWriteArrayList 读取是完全不用加锁的，更厉害的是，写入也不会阻塞读取操作，也就是说你可以在写入的同时进行读取，只有写入和写入之间需要进行同步，也就是不允许多个写入同时发生，但是在写入发生时允许读取同时发生。这样一来，读操作的性能就会大幅度提升。</span><br><span class="line"></span><br><span class="line">CopyOnWrite 的意思是说，当容器需要被修改的时候，不直接修改当前容器，而是先将当前容器进行 Copy，复制出一个新的容器，然后修改新的容器，完成修改之后，再将原容器的引用指向新的容器。这样就完成了整个修改过程。</span><br><span class="line"></span><br><span class="line">缺点：</span><br><span class="line">占用内存，相当于是内存中有两个对象</span><br></pre></td></tr></table></figure>

<ul>
<li>等待多线程完成CountDownLatch（打点计数，定义一个计数器当线程运行到一个就减一当计数器为0时就可以，这里的计数器变成0后就不能重复使用了）</li>
<li>同步屏障CyclicBarrier（循环栅栏这个会等待所有线程执行到屏障时才会开门继续执行，它可以重复利用）</li>
<li>控制并发线程数Semaphore（信号量，用来控制可以有多少线程去获取资源）</li>
<li>线程间交换数据Exchanger（交换者，当两个线程都执行了exchange方法后就可以交换数据，一个没有执行就会等待，所以需要设置过期时间）</li>
</ul>
]]></content>
      <tags>
        <tag>JUC</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令</title>
    <url>/posts/d0edc1ed/</url>
    <content><![CDATA[<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> usr <span class="comment">#切换到usr目录下</span></span><br><span class="line"><span class="built_in">cd</span>.. <span class="comment">#切换到上一层目录</span></span><br><span class="line"><span class="built_in">cd</span>/ <span class="comment">#切换到根目录</span></span><br><span class="line"><span class="built_in">cd</span>~ <span class="comment">#切换到用户主目录</span></span><br><span class="line">ll <span class="comment">#查看目录信息</span></span><br><span class="line"><span class="built_in">touch</span> <span class="comment">#创建文件夹</span></span><br><span class="line"><span class="built_in">tail</span> -f <span class="comment">#动态查看日志</span></span><br><span class="line">tar -zcvf <span class="comment">#打包压缩</span></span><br><span class="line">tar -xvf <span class="comment">#解压缩</span></span><br><span class="line"><span class="built_in">ls</span> -l <span class="comment">#查看某个目录下文件或目录的权限</span></span><br><span class="line">ps -ef/ps -aux <span class="comment">#查看正在运行的进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 进程的pid <span class="comment">#杀死进程</span></span><br><span class="line">netstat -an <span class="comment">#查看当前系统的端口使用情况</span></span><br><span class="line">ifconfig <span class="comment">#查看当前系统的网卡信息</span></span><br><span class="line">shoutdown <span class="comment">#关机</span></span><br><span class="line">reboot <span class="comment">#重启</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL基本语句</title>
    <url>/posts/36371deb/</url>
    <content><![CDATA[<p>基础语法与函数的使用以及连接查询和常用场景</p>
<span id="more"></span>

<h4 id="一、MySQL增删改查基本语法"><a href="#一、MySQL增删改查基本语法" class="headerlink" title="一、MySQL增删改查基本语法"></a>一、MySQL增删改查基本语法</h4><h6 id="1、新增"><a href="#1、新增" class="headerlink" title="1、新增"></a>1、新增</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--插入一条</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>(<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>字段<span class="number">3</span><span class="operator">&gt;</span>,...) <span class="keyword">values</span>(<span class="operator">&lt;</span>值<span class="number">1</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>值<span class="number">2</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>值<span class="number">3</span><span class="operator">&gt;</span>...);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">values</span>(<span class="operator">&lt;</span>值<span class="number">1</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>值<span class="number">2</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>值<span class="number">3</span><span class="operator">&gt;</span>...);</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入多条</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">VALUES</span> (<span class="operator">&lt;</span>值<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">2</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">3</span><span class="operator">&gt;</span>), (<span class="operator">&lt;</span>值<span class="number">4</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">5</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">6</span><span class="operator">&gt;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> (<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">3</span><span class="operator">&gt;</span>) <span class="keyword">VALUES</span> (<span class="operator">&lt;</span>值<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">2</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">3</span><span class="operator">&gt;</span>), (<span class="operator">&lt;</span>值<span class="number">4</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">5</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">6</span><span class="operator">&gt;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--将查询结果插入新表</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--将查询部分字段插入新表：</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> (<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>) <span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">3</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>字段<span class="number">4</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--复制表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="2、删除"><a href="#2、删除" class="headerlink" title="2、删除"></a>2、删除</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--按照条件删除</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--全部删除</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure>

<h6 id="3、修改"><a href="#3、修改" class="headerlink" title="3、修改"></a>3、修改</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--按条件修改</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>新的值<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--全部修改</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>新的值<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--修改多个字段</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>值<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>值<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--使一列的值与另一列的值相等:</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure>

<h6 id="4、查询"><a href="#4、查询" class="headerlink" title="4、查询"></a>4、查询</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--去重查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--条件查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> 字段 <span class="operator">&lt;</span>比较运算符<span class="operator">&gt;</span> 值;</span><br><span class="line"></span><br><span class="line"><span class="comment">--IN:</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">IN</span> (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--BETWEEN AND：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">BETWEEN</span> <span class="number">1</span> <span class="keyword">AND</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--NOT NULL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--AND / OR：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">3</span> <span class="keyword">AND</span> name <span class="operator">=</span> <span class="string">&#x27;ming&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--模糊查询(%为通配符，_为匹配任意一个字符，[charlist]为字符列中的任意单个字符)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="keyword">LIKE</span> <span class="string">&#x27;%XXX%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--正则匹配查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> REGEXP <span class="string">&#x27;^[aeiou]|ok$&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--起别名 AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="keyword">AS</span> <span class="operator">&lt;</span>别名<span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--合并两张表并去除重复值：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">UNION</span> <span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--合并两张表非去重：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--分组：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>, <span class="built_in">COUNT</span>(<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>), <span class="built_in">COUNT</span>(<span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--分组 + 条件：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--排序查询，正序ASC，逆序DESC：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--限制查询，从索引m开始，限制查n条：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="keyword">DESC</span> LIMIT m n;</span><br></pre></td></tr></table></figure>

<h4 id="二、函数"><a href="#二、函数" class="headerlink" title="二、函数"></a>二、函数</h4><h6 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--统计符合条件的行数：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">&gt;</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--统计列中非空行数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--统计列中非重复非空行数：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--统计列中的最大值和最小值：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--统计求和：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--求平均值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--分组合并：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, GROUP_CONCAT(<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>...) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure>

<h4 id="三、连表查询"><a href="#三、连表查询" class="headerlink" title="三、连表查询"></a>三、连表查询</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--内连接：</span></span><br><span class="line"><span class="keyword">SELECT</span> a.<span class="operator">*</span>, b.<span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">AS</span> a <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">AS</span> b <span class="keyword">ON</span> a.id <span class="operator">=</span> b.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--左连接：</span></span><br><span class="line"><span class="keyword">SELECT</span> a.<span class="operator">*</span>, b.<span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">AS</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">AS</span> b <span class="keyword">ON</span> a.id <span class="operator">=</span> b.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--右连接：</span></span><br><span class="line"><span class="keyword">SELECT</span> a.<span class="operator">*</span>, b.<span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">AS</span> a <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">AS</span> b <span class="keyword">ON</span> a.id <span class="operator">=</span> b.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--子查询：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">IN</span> (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> id <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">1</span>);</span><br></pre></td></tr></table></figure>

<h4 id="四、常用场景"><a href="#四、常用场景" class="headerlink" title="四、常用场景"></a>四、常用场景</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.字符串替换：</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> REPLACE(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>, str1, str2);</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.根据某一列删除表中重复数据（保留id小的数据）：</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="built_in">MIN</span>(id) <span class="keyword">AS</span> id <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>重复列<span class="operator">&gt;</span>) <span class="keyword">AS</span> t);</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.根据某一列删除表中重复数据（保留id大的数据）：</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(id) <span class="keyword">AS</span> id <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>重复列<span class="operator">&gt;</span>) <span class="keyword">AS</span> t);</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.三个表的连表查询：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">AS</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">AS</span> b <span class="keyword">ON</span> a.id <span class="operator">=</span> b.id) <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="operator">&lt;</span>表名<span class="number">3</span><span class="operator">&gt;</span> <span class="keyword">AS</span> c <span class="keyword">ON</span> a.id <span class="operator">=</span> c.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.排除某个表中的一列，查找其他所有列：</span></span><br><span class="line"><span class="keyword">SELECT</span> GROUP_CONCAT(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span> SEPARATOR <span class="string">&#x27;,&#x27;</span>) <span class="keyword">FROM</span> information_schema.COLUMNS <span class="keyword">WHERE</span> table_name <span class="operator">=</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">AND</span> column_name <span class="operator">!=</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.去掉某一列中的括号及内容：</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> REPLACE(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>, <span class="built_in">SUBSTRING</span>(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>, LOCATE(<span class="string">&#x27;(&#x27;</span>, <span class="operator">&lt;</span>字段<span class="operator">&gt;</span>), LOCATE(<span class="string">&#x27;)&#x27;</span>, <span class="operator">&lt;</span>字段<span class="operator">&gt;</span>)<span class="operator">-</span>LOCATE(<span class="string">&#x27;(&#x27;</span>, <span class="operator">&lt;</span>字段<span class="operator">&gt;</span>)<span class="operator">+</span><span class="number">1</span>), <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.根据两个表的相同列更新另一个表中的另一列数据：</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">AS</span> A, <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">AS</span> B <span class="keyword">SET</span> A.<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="operator">=</span> B.<span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">WHERE</span> A.<span class="operator">&lt;</span>字段<span class="number">3</span><span class="operator">&gt;</span> <span class="operator">=</span> B.<span class="operator">&lt;</span>字段<span class="number">4</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--8.查询数据库中的表名及字段信息：</span></span><br><span class="line"># 查询当前数据库</span><br><span class="line"><span class="keyword">SELECT</span> DATABASE();</span><br><span class="line"># 查询当前数据库中的所有表名</span><br><span class="line"><span class="keyword">SELECT</span> TABLE_NAME <span class="keyword">FROM</span> information_schema.TABLES <span class="keyword">WHERE</span> TABLE_SCHEMA <span class="operator">=</span> (<span class="keyword">SELECT</span> DATABASE()) <span class="keyword">AND</span> TABLE_TYPE<span class="operator">=</span><span class="string">&#x27;BASE TABLE&#x27;</span>;</span><br><span class="line"># 查询指定数据库中的所有表名</span><br><span class="line"><span class="keyword">SELECT</span> TABLE_NAME <span class="keyword">FROM</span> information_schema.TABLES <span class="keyword">WHERE</span> TABLE_SCHEMA<span class="operator">=</span><span class="string">&#x27;&lt;数据库名&gt;&#x27;</span> <span class="keyword">AND</span> TABLE_TYPE<span class="operator">=</span><span class="string">&#x27;BASE TABLE&#x27;</span>;</span><br><span class="line"># 查询指定数据库中指定表名的字段信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> information_schema.COLUMNS <span class="keyword">WHERE</span> TABLE_SCHEMA<span class="operator">=</span><span class="string">&#x27;&lt;数据库名&gt;&#x27;</span> <span class="keyword">and</span> TABLE_NAME<span class="operator">=</span><span class="string">&#x27;&lt;表名&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Redis相关</title>
    <url>/posts/a1d47c8e/</url>
    <content><![CDATA[<h6 id="1、Redis常用在什么时候，为什么要用Redis"><a href="#1、Redis常用在什么时候，为什么要用Redis" class="headerlink" title="1、Redis常用在什么时候，为什么要用Redis"></a>1、Redis常用在什么时候，为什么要用Redis</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先需要知道Redis是作为缓存来使用的，那么为什么要使用缓存技术呢，因为Redis是基于内存操作，使用多路IO，以及简单的数据结构并且是单线程的，可以使其响应起来迅速，也就是反应快。</span><br><span class="line">那么在日常开发中当我们遇到一个比较热点的东西或者访问量较大的东西时就可以使用Redis来作为缓存，存放这些热点数据。</span><br><span class="line">它的使用场景：</span><br><span class="line">	1、作为缓存</span><br><span class="line">	2、做排行榜，用到了Redis提供的zset数据结构</span><br><span class="line">	3、计数器，例如商品的浏览数就可以使用Redis的incr命令来实现计数功能</span><br><span class="line">	4、分布式会话，集群模式下作为session共享的容器，可以实现单点登录功能</span><br><span class="line">	5、实现分布式锁，公司中使用了分布式微服务技术就会涉及到分布式事务问题，可以使用Redis的setNX命令来实现（全局ID，减库存，秒杀）</span><br><span class="line">	6、社交网络，实现关注被关注的功能，用到了Redis的hash结构</span><br><span class="line">	7、作为消息队列，实现将本地缓存共享，用了发布订阅模式（比较简单）</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h6 id="2、项目中使用Redis的缺点以及解决方法"><a href="#2、项目中使用Redis的缺点以及解决方法" class="headerlink" title="2、项目中使用Redis的缺点以及解决方法"></a>2、项目中使用Redis的缺点以及解决方法</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、使用了缓存技术后会有数据双写一致性的问题：</span><br><span class="line">	解决办法（保证最终一致性）可以使用延时双删，先删除一次缓存，然后让这个线程休眠一段时间（根据业务来判断需要休眠多少时间），然后再删除一次缓存。</span><br><span class="line">	（保证强一致性）就可以使用一个分布式锁</span><br><span class="line">2、缓存雪崩问题：</span><br><span class="line">	就是可能会有大量的key失效，让这些请求直接到了数据库导致数据库崩溃</span><br><span class="line">	解决办法：①、给每一个key设置一个随机的过期时间</span><br><span class="line">		②、搭建Redis集群</span><br><span class="line">3、缓存击穿问题：</span><br><span class="line">	就是没有这个数据，缓存中和数据库中都没有这个数据，黑客可能会一直请求这个没有的资源，导致数据库连接异常。</span><br><span class="line">	解决办法：①、可以使用布隆过滤器来解决。</span><br><span class="line">		②、或者来一个没有的请求就给他设置一个null值，但是这种会耗内存，而且治标不治本</span><br><span class="line">4、缓存穿透问题：</span><br><span class="line">	就是可能会有一个热点key突然失效</span><br><span class="line">	解决办法：可以使用分布式锁来解决</span><br></pre></td></tr></table></figure>

<h6 id="3、Redis的持久化"><a href="#3、Redis的持久化" class="headerlink" title="3、Redis的持久化"></a>3、Redis的持久化</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、RDB持久化</span><br><span class="line">	rdb持久化就相当于一个快照形式，恢复数据的比较快</span><br><span class="line">	缺点：1、不保证数据完整性，会丢失最后一次快照以后更改的所有数据；</span><br><span class="line">		2、父进程在fork子进程的时候如果主进程比较大会阻塞；</span><br><span class="line"></span><br><span class="line">2、AOF持久化</span><br><span class="line">	是相当于日志的形式，将操作以命令行的形式存储在硬盘，但是保存的文件较大，当文件较大的时候会重写就是将多条操作和一条操作最终结果一样就改为一条</span><br><span class="line">	</span><br><span class="line">3、用的时候推荐混合使用</span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>chenge-first-blog</title>
    <url>/posts/4c3bfe5e/</url>
    <content><![CDATA[<p>大家好，我是瑾宸~~~<br>练习使用gitHub搭建博客</p>
<span id="more"></span>

]]></content>
  </entry>
  <entry>
    <title>MySQL相关</title>
    <url>/posts/e31b1d8d/</url>
    <content><![CDATA[<h5 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h5><span id="more"></span>

<p>参考csdn上的：</p>
<p><a href="https://blog.csdn.net/adminpd/article/details/122910606">https://blog.csdn.net/adminpd/article/details/122910606</a></p>
]]></content>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>多线程相关</title>
    <url>/posts/cba8004/</url>
    <content><![CDATA[<p>多线程：</p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<span id="more"></span>

<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>nginx相关</title>
    <url>/posts/7edccfdc/</url>
    <content><![CDATA[<p>Nginx的功能：动静分离、反向代理、负载均衡</p>
<span id="more"></span>

<h5 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">明面上看是将用户需要的静态资源和动态资源分开处理，实际上是将动态的请求和静态的请求给分开了。</span><br><span class="line">Nginx处理静态资源比较快，因此使用Nginx来处理静态页面和静态资源，Tomcat来处理动态请求动态资源</span><br></pre></td></tr></table></figure>

<h5 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">反向代理指的是 代理服务器（例如：nginx）来接受internet上的连接请求，然后将请求转发给内部服务器（例如：Tomcat），并且将从内部服务器上得到的结果返回给internet上请求连接的客户，这时这个代理服务器（Nginx）对外就表现为一个反向代理服务器。</span><br><span class="line">从用户端来看，实际上用户并不知道真正的服务提供者是哪一台服务器，只知道请求了代理服务器，因此这种反向代理的方式又对外隐藏了真实的服务器地址，从一定程度上降低了安全隐患。</span><br></pre></td></tr></table></figure>

<h5 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">有：</span><br><span class="line">轮询的方式（默认）</span><br><span class="line">最少连接的方式（连的最少就将请求发送到这个服务器）</span><br><span class="line">IP_hash（可以解决session的问题，但是会造成负载的不均）</span><br><span class="line">按照相应时间来分配（谁响应时间最短就分配给谁）</span><br><span class="line">Url_hash（按照url的请求经过hash啦分配请求）</span><br></pre></td></tr></table></figure>

<h5 id="nginx-conf文件的内容"><a href="#nginx-conf文件的内容" class="headerlink" title="nginx.conf文件的内容"></a>nginx.conf文件的内容</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">......</span><br><span class="line">    #gzip on;</span><br><span class="line">    #配置负载均衡的服务器列表，weight参数表示权重，权重越高，被分配到的概率越大</span><br><span class="line">    upstream tomcat_server &#123; #代理的服务器地址和权重</span><br><span class="line">        server 192.168.136.20:8080 weight=1;</span><br><span class="line">        server 192.168.136.40:8080 weight=1;</span><br><span class="line">        server 192.168.136.40:8081 weight=1;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123; # 设置监听的端口和服务的地址</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name www.t2.com;</span><br><span class="line">        charset utf-8;</span><br><span class="line">        #access_log logs/host.access.log main;</span><br><span class="line">        #配置Nginx处理动态页面请求，将 .jsp文件请求转发到Tomcat 服务器处理</span><br><span class="line">        location ~ .*\.jsp$ &#123; # 请求服务器资源的路径</span><br><span class="line">            proxy_pass http://tomcat_server; # 代理请求</span><br><span class="line">#设置后端的Web服务器可以获取远程客户端的真实IP</span><br><span class="line">##设定后端的Web服务器接收到的请求访问的主机名（域名或IP、端口），默认HOST的值为proxy_pass指令设置的主机名。如果反向代理服务器不重写该请求头的话，那么后端真实服务器在处理时会认为所有的请求都来自反向代理服务器，如果后端有防攻击策略的话，那么机器就被封掉了。</span><br><span class="line">            proxy_set_header HOST $host;</span><br><span class="line">##把$remote_addr赋值给X-Real-IP，来获取源IP</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">##在nginx 作为代理服务器时，设置的IP列表，会把经过的机器ip，代理机器ip都记录下来</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br><span class="line">        #配置Nginx处理静态图片请求</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|css)$ &#123;</span><br><span class="line">            root /usr/local/nginx/html/img;</span><br><span class="line">            expires 10d;</span><br><span class="line">        &#125;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root html;</span><br><span class="line">            index index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">......</span><br><span class="line">    &#125;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>订单模块关键问题</title>
    <url>/posts/29484f57/</url>
    <content><![CDATA[<p>订单模块的各种问题考虑：</p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、首先要选择准备支持的支付方式（微信、支付宝......）</span><br><span class="line">2、选择好支付方式后要考虑用户是否会重复下单：</span><br><span class="line">	例如用户利用浏览器的回退功能再次下单：</span><br><span class="line">		可以生成一个流水号，将流水号存在Redis中以用户的id为key ，流水号作为value，同时将生成的流水号从页面当作参数传给下单的接口，下单接口拿着流水号去redis里面比较，如果一样那么就下单，如果不一样就不能下单，当用户下单后就将redis里面的流水号删除，当用户回退浏览器再次下单也不会比对成功。</span><br><span class="line">3、要考虑之前的商品价格是否变动：</span><br><span class="line">	如果价格发生了改变提示用户价格改变重新选择，它检查价格的时候发现改变会即时将新价格更新到购物车缓存中，所以提示用户重新选择就可以。</span><br><span class="line">4、要考虑商品库存问题：</span><br><span class="line">	当库存不足的时候提示商品库存不足。</span><br><span class="line">5、当这些都没有问题的时候，保存订单信息，生成一个订单交易编号采用随机字符串+时间戳+随机数</span><br><span class="line">6、需要考虑订单未支付时的有效时间：利用MQ发送延时消息</span><br><span class="line">7、使用支付宝支付：</span><br><span class="line">	需要创建一个AlipayClient对象根据支付宝的开发文档来操作就可以</span><br><span class="line">8、支付信息表需要有的数据：</span><br><span class="line">	订单ID、用户ID、订单交易编号、支付宝交易号、支付类型、支付金额、支付状态、回调时间、回调内容</span><br><span class="line">	这个表的作用就是用来记账，看支付宝收了多少钱，防止后续的一系列问题</span><br><span class="line">9、当调用支付宝接口的时候会返回一个支付页面</span><br><span class="line">10、提供的同步回调一般是用来给用户看的让用户知道支付成功了</span><br><span class="line">11、异步回调是为了调用自己的平台接口通知支付结果，修改自己系统中表的信息</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>开发常用网站</title>
    <url>/posts/4196d54/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mybatis:  https://mybatis.org/mybatis-3/index.html</span><br><span class="line">maven仓库：    https://mvnrepository.com/</span><br><span class="line">程序员导航：   https://www.cxy521.com/</span><br><span class="line">bootcss网站：    https://v3.bootcss.com/</span><br><span class="line">前端element：   https://element.eleme.cn/#/zh-CN</span><br><span class="line">mybatis-plus:    https://baomidou.com/</span><br><span class="line">jquery:    https://jquery.com/</span><br><span class="line">npm:   https://www.npmjs.com/</span><br><span class="line">rabbitMQ:    https://www.rabbitmq.com/</span><br><span class="line">jquery:    https://jquery.com/</span><br><span class="line">前端echarts：   https://echarts.apache.org/zh/index.html</span><br><span class="line">sdk社区：    https://www.sdk.cn/</span><br><span class="line">在线图库：    https://wallhaven.cc/</span><br><span class="line">系统镜像和工具网站：    https://msdn.itellyou.cn/</span><br><span class="line">gradle包：  https://services.gradle.org/distributions/</span><br><span class="line">软仓：   https://www.ruancang.net/#/sim?page=0&amp;id=7&amp;_=1673063763053</span><br><span class="line">奇迹秀工具箱：    https://www.qijishow.com/down/index.html</span><br><span class="line">hexo网站搭建：   https://hexo.io/zh-cn/</span><br><span class="line">获取虚拟手机短信注册国外软件用：   https://sms-activate.org/getNumber#</span><br></pre></td></tr></table></figure>

<span id="more"></span>

]]></content>
      <tags>
        <tag>实用网站</tag>
      </tags>
  </entry>
  <entry>
    <title>网络是怎样连接的阅读笔记</title>
    <url>/posts/64ffd4a7/</url>
    <content><![CDATA[<p>网络是怎样连接的阅读笔记</p>
<span id="more"></span>

<h4 id="1、第一章—-浏览器内部"><a href="#1、第一章—-浏览器内部" class="headerlink" title="1、第一章—-浏览器内部"></a>1、第一章—-浏览器内部</h4><h5 id="1-1：生成HTTP请求消息"><a href="#1-1：生成HTTP请求消息" class="headerlink" title="1.1：生成HTTP请求消息"></a>1.1：生成HTTP请求消息</h5><h6 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h6><p>​		网址头部除了有http以外还有“ftp”，“file”，“mailto”等</p>
<p>​		FTP服务器：是文件传输协议，用在文件的上传和下载</p>
<p>​		http：用来访问web服务器，超文本传输协议</p>
<p>​		mailto：是用来传输邮件的协议</p>
<p>图1.1列举了常见的几种URL，URL中会包含服务器的域名和要访问的文件的路径等</p>
<p>发送邮件的URL包含收件人的邮件地址，根据需要URL中还会包含用户名、密码、服务器端口号等</p>
<p><img src="https://res.weread.qq.com/wrepub/epub_907755_17" alt="&quot;不同URL&quot;"></p>
<h6 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h6><p>​	浏览器的第一步工作就是堆URL进行解析</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http开头的URL可能以“/”结尾比如：</span><br><span class="line">https://wzf5251.github.io/about/</span><br><span class="line"></span><br><span class="line">/about/后面省略的话会访问默认文件index.html或者default.html；</span><br><span class="line"></span><br><span class="line">http开头的URL也可能是这样：</span><br><span class="line">https://wzf5251.github.io</span><br><span class="line"></span><br><span class="line">把“/”省略了这种会直接访问根目录下的index.html或者default.html。</span><br><span class="line"></span><br><span class="line">也可能是https://wzf5251.github.io/about</span><br><span class="line">如果有以about命名的文件就作为文件来处理，如果有命名为about的目录就作为目录来处理。</span><br></pre></td></tr></table></figure>

<h6 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTTP协议定义了客户端和服务器之间交互的消息内容和步骤</span><br><span class="line">发送请求消息，其中请求消息包含URI</span><br><span class="line">URI：统一资源标识符，一般来说是文件名或者一个CGI程序的文件名</span><br><span class="line">我们要访问的目标都可以统称为URI</span><br></pre></td></tr></table></figure>

<p>​	HTTP主要请求方法</p>
<p><img src="https://res.weread.qq.com/wrepub/epub_907755_33" alt="&quot;HTTP主要请求方法&quot;"></p>
<h6 id="请求消息"><a href="#请求消息" class="headerlink" title="请求消息"></a>请求消息</h6><p>请求消息的规格</p>
<p><img src="https://res.weread.qq.com/wrepub/epub_907755_38" alt="&quot;请求消息的规格&quot;"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">请求行：</span><br><span class="line">请求头：</span><br><span class="line">空行：</span><br><span class="line">请求体：</span><br><span class="line">响应状态行：</span><br><span class="line">响应头：</span><br><span class="line">空行：</span><br><span class="line">响应体：</span><br></pre></td></tr></table></figure>

<p>HTTP中主要的头字段</p>
<p><img src="https://res.weread.qq.com/wrepub/epub_907755_41" alt="&quot;http头&quot;"></p>
<p>​	响应状态码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1xx:  告知请求的处理进度和情况</span><br><span class="line">2xx： 成功</span><br><span class="line">3xx： 表示需要进一步操作</span><br><span class="line">4xx： 客户端错误</span><br><span class="line">5xx： 服务器错误</span><br></pre></td></tr></table></figure>

<p>​	一条请求消息中只能写1个URI如果需要获取多个文件，必须堆每一个文件单独发送一条请求</p>
<h5 id="1-2向DNS服务器查询Web服务器的IP地址"><a href="#1-2向DNS服务器查询Web服务器的IP地址" class="headerlink" title="1.2向DNS服务器查询Web服务器的IP地址"></a>1.2向DNS服务器查询Web服务器的IP地址</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">路由器：一种对包进行转发的设备</span><br><span class="line">集线器：转发包，分为中继式和交换式</span><br><span class="line">IP地址必须保证唯一，否则网络会发生故障</span><br><span class="line">数据都是以包的形式传送的</span><br><span class="line">IP地址的主机号：</span><br><span class="line">	全是0：表示整个子网</span><br><span class="line">	全是1：表示向子网上所有的设备发送包，即“广播”</span><br><span class="line">DNS：域名服务系统，将服务器名称和IP地址关联</span><br><span class="line">Socket库：是用于掉哟哦给你网络功能的程序组件集合</span><br><span class="line">根据域名查询IP地址时，浏览器会使用Socket库中的解析器。</span><br><span class="line">协议栈：操作系统内部的网络控制软件，也叫做&quot;协议驱动&quot;，&quot;TCP/IP驱动&quot;</span><br></pre></td></tr></table></figure>

<h4 id="2、第二章—-协议栈-TCP-x2F-IP"><a href="#2、第二章—-协议栈-TCP-x2F-IP" class="headerlink" title="2、第二章—-协议栈 TCP&#x2F;IP"></a>2、第二章—-协议栈 TCP&#x2F;IP</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">浏览器、邮件等一般应用程序收发数据时用TCP；</span><br><span class="line">DNS查询等收发较短的控制数据时用UDP。</span><br><span class="line">在互联网上传送数据时，数据会被切分成一个一个的网络包</span><br><span class="line">ICMP协议：用于告知网络包传送过程中产生的错误以及各种控制消息</span><br><span class="line">ARP协议：用于根据IP地址查询相应的以太网MAC地址</span><br><span class="line">MAC地址：符合IEEE规格的局域网设备都使用同一格式的地址，这种地址被称为MAC地址</span><br><span class="line">协议栈是根据套接字中记录的控制信息来工作的</span><br><span class="line">创建套接字时，首先分配一个套接字所需要的内存空间，然后向其中写入初始状态</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<p>注：图片均来源与微信阅读《网路是怎样连接的》</p>
]]></content>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
</search>
