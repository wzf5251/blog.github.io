<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Linux常用命令</title>
    <url>/posts/d0edc1ed/</url>
    <content><![CDATA[<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> usr <span class="comment">#切换到usr目录下</span></span><br><span class="line"><span class="built_in">cd</span>.. <span class="comment">#切换到上一层目录</span></span><br><span class="line"><span class="built_in">cd</span>/ <span class="comment">#切换到根目录</span></span><br><span class="line"><span class="built_in">cd</span>~ <span class="comment">#切换到用户主目录</span></span><br><span class="line">ll <span class="comment">#查看目录信息</span></span><br><span class="line"><span class="built_in">touch</span> <span class="comment">#创建文件夹</span></span><br><span class="line"><span class="built_in">tail</span> -f <span class="comment">#动态查看日志</span></span><br><span class="line">tar -zcvf <span class="comment">#打包压缩</span></span><br><span class="line">tar -xvf <span class="comment">#解压缩</span></span><br><span class="line"><span class="built_in">ls</span> -l <span class="comment">#查看某个目录下文件或目录的权限</span></span><br><span class="line">ps -ef/ps -aux <span class="comment">#查看正在运行的进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 进程的pid <span class="comment">#杀死进程</span></span><br><span class="line">netstat -an <span class="comment">#查看当前系统的端口使用情况</span></span><br><span class="line">ifconfig <span class="comment">#查看当前系统的网卡信息</span></span><br><span class="line">shoutdown <span class="comment">#关机</span></span><br><span class="line">reboot <span class="comment">#重启</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Java开发工具类</title>
    <url>/posts/3a8c70dd/</url>
    <content><![CDATA[<h6 id="1、MD5加密工具类"><a href="#1、MD5加密工具类" class="headerlink" title="1、MD5加密工具类"></a>1、MD5加密工具类</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">MD5</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encrypt</span><span class="params">(String strSrc)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">char</span> hexChars[] = &#123; <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span> &#125;;</span><br><span class="line">            <span class="type">byte</span>[] bytes = strSrc.getBytes();</span><br><span class="line">            <span class="type">MessageDigest</span> <span class="variable">md</span> <span class="operator">=</span> MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">            md.update(bytes);</span><br><span class="line">            bytes = md.digest();</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> bytes.length;</span><br><span class="line">            <span class="type">char</span>[] chars = <span class="keyword">new</span> <span class="title class_">char</span>[j * <span class="number">2</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; bytes.length; i++) &#123;</span><br><span class="line">                <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> bytes[i];</span><br><span class="line">                chars[k++] = hexChars[b &gt;&gt;&gt; <span class="number">4</span> &amp; <span class="number">0xf</span>];</span><br><span class="line">                chars[k++] = hexChars[b &amp; <span class="number">0xf</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(chars);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;MD5加密出错！！+&quot;</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h6 id="2、IP工具类"><a href="#2、IP工具类" class="headerlink" title="2、IP工具类"></a>2、IP工具类</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取ip地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IpUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getIpAddress</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ipAddress</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ipAddress = request.getHeader(<span class="string">&quot;x-forwarded-for&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (ipAddress == <span class="literal">null</span> || ipAddress.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ipAddress)) &#123;</span><br><span class="line">                ipAddress = request.getHeader(<span class="string">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ipAddress == <span class="literal">null</span> || ipAddress.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ipAddress)) &#123;</span><br><span class="line">                ipAddress = request.getHeader(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ipAddress == <span class="literal">null</span> || ipAddress.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ipAddress)) &#123;</span><br><span class="line">                ipAddress = request.getRemoteAddr();</span><br><span class="line">                <span class="keyword">if</span> (ipAddress.equals(<span class="string">&quot;127.0.0.1&quot;</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 根据网卡取本机配置的IP</span></span><br><span class="line">                    <span class="type">InetAddress</span> <span class="variable">inet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        inet = InetAddress.getLocalHost();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    ipAddress = inet.getHostAddress();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 对于通过多个代理的情况，第一个IP为客户端真实IP,多个IP按照&#x27;,&#x27;分割</span></span><br><span class="line">            <span class="keyword">if</span> (ipAddress != <span class="literal">null</span> &amp;&amp; ipAddress.length() &gt; <span class="number">15</span>) &#123; <span class="comment">// &quot;***.***.***.***&quot;.length()</span></span><br><span class="line">                <span class="comment">// = 15</span></span><br><span class="line">                <span class="keyword">if</span> (ipAddress.indexOf(<span class="string">&quot;,&quot;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    ipAddress = ipAddress.substring(<span class="number">0</span>, ipAddress.indexOf(<span class="string">&quot;,&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            ipAddress=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// ipAddress = this.getRequest().getRemoteAddr();</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ipAddress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 网关中获取Ip地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getGatwayIpAddress</span><span class="params">(ServerHttpRequest request)</span> &#123;</span><br><span class="line">        <span class="type">HttpHeaders</span> <span class="variable">headers</span> <span class="operator">=</span> request.getHeaders();</span><br><span class="line">        <span class="type">String</span> <span class="variable">ip</span> <span class="operator">=</span> headers.getFirst(<span class="string">&quot;x-forwarded-for&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (ip != <span class="literal">null</span> &amp;&amp; ip.length() != <span class="number">0</span> &amp;&amp; !<span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            <span class="comment">// 多次反向代理后会有多个ip值，第一个ip才是真实ip</span></span><br><span class="line">            <span class="keyword">if</span> (ip.indexOf(<span class="string">&quot;,&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">                ip = ip.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = headers.getFirst(<span class="string">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = headers.getFirst(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = headers.getFirst(<span class="string">&quot;HTTP_CLIENT_IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = headers.getFirst(<span class="string">&quot;HTTP_X_FORWARDED_FOR&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = headers.getFirst(<span class="string">&quot;X-Real-IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = request.getRemoteAddress().getAddress().getHostAddress();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ip;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="3、HttpClent工具类"><a href="#3、HttpClent工具类" class="headerlink" title="3、HttpClent工具类"></a>3、HttpClent工具类</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HttpClient类 微信：</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpClientUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doGet</span><span class="params">(String url)</span>   &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpclient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line">        <span class="comment">// 创建http GET请求</span></span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 执行请求</span></span><br><span class="line">            response = httpclient.execute(httpGet);</span><br><span class="line">            <span class="comment">// 判断返回状态是否为200</span></span><br><span class="line">            <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) &#123;</span><br><span class="line">                <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">                <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> EntityUtils.toString(entity, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                EntityUtils.consume(entity);</span><br><span class="line">                httpclient.close();</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">            httpclient.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>  <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">download</span><span class="params">(String url,String fileName)</span>   &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpclient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line">        <span class="comment">// 创建http GET请求</span></span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 执行请求</span></span><br><span class="line">            response = httpclient.execute(httpGet);</span><br><span class="line">            <span class="comment">// 判断返回状态是否为200</span></span><br><span class="line">            <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) &#123;</span><br><span class="line">                <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line"></span><br><span class="line">               <span class="comment">// String result = EntityUtils.toString(entity, &quot;UTF-8&quot;);</span></span><br><span class="line">                <span class="type">byte</span>[] bytes = EntityUtils.toByteArray(entity);</span><br><span class="line">                <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line">               <span class="comment">//  InputStream in = entity.getContent();</span></span><br><span class="line">                <span class="type">FileOutputStream</span> <span class="variable">fout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">                fout.write(bytes);</span><br><span class="line"></span><br><span class="line">                EntityUtils.consume(entity);</span><br><span class="line"></span><br><span class="line">                httpclient.close();</span><br><span class="line">                fout.flush();</span><br><span class="line">                fout.close();</span><br><span class="line">                <span class="keyword">return</span>  ;</span><br><span class="line">            &#125;</span><br><span class="line">            httpclient.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span>  ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>   ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="4、Date工具类"><a href="#4、Date工具类" class="headerlink" title="4、Date工具类"></a>4、Date工具类</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.lang.time.DateUtils;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日期操作工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">dateFormat</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取两个时间差 单位：秒</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">getTimeSubtract</span><span class="params">(Date date1, Date date2)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (date1.getTime() - date2.getTime()) / <span class="number">1000</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 格式化日期</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">formatDate</span><span class="params">(Date date)</span> &#123;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(dateFormat);</span><br><span class="line">        <span class="keyword">return</span> sdf.format(date);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 截取比较断两个日期对象的field处的值 。</span></span><br><span class="line"><span class="comment">     * 如果第一个日期小于、等于、大于第二个，则对应返回负整数、0、正整数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date1 第一个日期对象，非null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date2 第二个日期对象，非null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> field Calendar中的阈值</span></span><br><span class="line"><span class="comment">     *              &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *              date1 &gt; date2  返回：1</span></span><br><span class="line"><span class="comment">     *              date1 = date2  返回：0</span></span><br><span class="line"><span class="comment">     *              date1 &lt; date2  返回：-1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">truncatedCompareTo</span><span class="params">(<span class="keyword">final</span> Date date1, <span class="keyword">final</span> Date date2, <span class="keyword">final</span> <span class="type">int</span> field)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> DateUtils.truncatedCompareTo(date1, date2, field);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 比对时间大小</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> beginDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> endDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">dateCompare</span><span class="params">(Date beginDate, Date endDate)</span> &#123;</span><br><span class="line">        <span class="comment">// endDate &gt; beginDate</span></span><br><span class="line">        <span class="keyword">if</span> (DateUtil.truncatedCompareTo(beginDate, endDate, Calendar.SECOND) == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// beginDate  &lt;= endDate</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="5、Redis分布式锁-AOP实现"><a href="#5、Redis分布式锁-AOP实现" class="headerlink" title="5、Redis分布式锁+AOP实现"></a>5、Redis分布式锁+AOP实现</h6><p>​	①、先创建一个注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 元注解： 简单理解就是修饰注解的注解</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Target</span>: 用于描述注解的使用范围，简单理解就是当前注解可以用在什么地方</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Retention</span>: 表示注解的声明周期</span></span><br><span class="line"><span class="comment"> *             SOURCE:之存在类文件中，源码中，在class字节码不存在</span></span><br><span class="line"><span class="comment"> *             CLASS：存在到字节码文件中</span></span><br><span class="line"><span class="comment"> *             RUNTIME：运行时</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Inherited</span>: 继承 表示被GmallCache修饰的类的子类会不会继承GmallCache</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Documented</span>: 文档 javadoc指令可以生成文档</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123; ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> GmallCache &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//缓存的前缀</span></span><br><span class="line">    String <span class="title function_">prefix</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;cache:&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//缓存的后缀</span></span><br><span class="line">    String <span class="title function_">suffix</span><span class="params">()</span> <span class="keyword">default</span>  <span class="string">&quot;:info&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​	②、再创建一个切面类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.gmall.common.constant.RedisConst;</span><br><span class="line"><span class="keyword">import</span> jodd.util.StringUtil;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.redisson.api.RLock;</span><br><span class="line"><span class="keyword">import</span> org.redisson.api.RedissonClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> sun.applet.Main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GmallCacheAspect</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedissonClient redissonClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 使用aop实现分布式锁和缓存</span></span><br><span class="line"><span class="comment">     *  Around:环绕通知</span></span><br><span class="line"><span class="comment">     *    value:表示声明切入的位置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> joinPoint</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Throwable</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 1.定义获取数据的key</span></span><br><span class="line"><span class="comment">     *  例如：获取skuInfo    key ===sku:skuId</span></span><br><span class="line"><span class="comment">     *   (1)获取添加了<span class="doctag">@Gmallcache</span>注解的方法</span></span><br><span class="line"><span class="comment">     *      可以获取注解 可以获取注解的属性  可以获取方法的参数</span></span><br><span class="line"><span class="comment">     *   （2）可以尝试获取数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Around(&quot;@annotation(com.atguigu.gmall.common.cache.GmallCache)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">cacheGmallAspect</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">       <span class="comment">//创建返回对象</span></span><br><span class="line">        Object object=<span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">        <span class="comment">//获取添加了注解的方法</span></span><br><span class="line">        <span class="type">MethodSignature</span> <span class="variable">signature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">        <span class="comment">//获取注解</span></span><br><span class="line">        <span class="type">GmallCache</span> <span class="variable">gmallCache</span> <span class="operator">=</span> signature.getMethod().getAnnotation(GmallCache.class);</span><br><span class="line">        <span class="comment">//获取属性前缀</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">prefix</span> <span class="operator">=</span> gmallCache.prefix();</span><br><span class="line">        <span class="comment">//获取属性后缀</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">suffix</span> <span class="operator">=</span> gmallCache.suffix();</span><br><span class="line">        <span class="comment">//获取方法传入的参数</span></span><br><span class="line">        Object[] args = joinPoint.getArgs();</span><br><span class="line">        <span class="comment">//组合获取数据的key</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span>prefix+ Arrays.asList(args).toString()+suffix;</span><br><span class="line">        <span class="comment">//从缓存中获取数据</span></span><br><span class="line">        object=cacheHit(key,signature);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//判断</span></span><br><span class="line">            <span class="keyword">if</span>(object==<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="comment">//缓存中没有数据，需要从数据库查询</span></span><br><span class="line">                <span class="comment">//定义锁的key</span></span><br><span class="line">                String lockKey=prefix+<span class="string">&quot;:lock&quot;</span>;</span><br><span class="line">                <span class="comment">//准备上锁 redis redisson</span></span><br><span class="line">                <span class="type">RLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClient.getLock(lockKey);</span><br><span class="line">                <span class="comment">//上锁</span></span><br><span class="line">                <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> lock.tryLock(RedisConst.SKULOCK_EXPIRE_PX1,</span><br><span class="line">                        RedisConst.SKULOCK_EXPIRE_PX2, TimeUnit.SECONDS);</span><br><span class="line">                <span class="comment">//判断是否成功</span></span><br><span class="line">                <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="comment">//获取到了锁</span></span><br><span class="line">                        <span class="comment">//查询数据库，-执行切入的方法的方法体实际上就是查询数据库</span></span><br><span class="line">                        object= joinPoint.proceed(args);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//判断是否从mysql查询到了数据</span></span><br><span class="line">                        <span class="keyword">if</span>(object==<span class="literal">null</span>)&#123;</span><br><span class="line">                            <span class="comment">//创建空值</span></span><br><span class="line"><span class="comment">//                            object=new Object();</span></span><br><span class="line">                            <span class="comment">//反射-获取返回值类型的字节码对象</span></span><br><span class="line">                            <span class="type">Class</span> <span class="variable">aClass</span> <span class="operator">=</span> signature.getReturnType();</span><br><span class="line">                            <span class="comment">//创建对象</span></span><br><span class="line">                            object = aClass.newInstance();</span><br><span class="line">                           <span class="comment">//存储</span></span><br><span class="line">                            redisTemplate.opsForValue().set(key,JSON.toJSONString(object),</span><br><span class="line">                                    RedisConst.SKUKEY_TEMPORARY_TIMEOUT,TimeUnit.SECONDS);</span><br><span class="line">                            <span class="keyword">return</span> object;</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="comment">//存储</span></span><br><span class="line">                            redisTemplate.opsForValue().set(key,JSON.toJSONString(object),</span><br><span class="line">                                    RedisConst.SKUKEY_TEMPORARY_TIMEOUT,TimeUnit.SECONDS);</span><br><span class="line">                            <span class="keyword">return</span> object;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                        <span class="comment">//释放锁</span></span><br><span class="line">                        lock.unlock();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="comment">//睡眠</span></span><br><span class="line">                    Thread.sleep(<span class="number">100</span>);</span><br><span class="line">                    <span class="comment">//自旋</span></span><br><span class="line">                    <span class="keyword">return</span> cacheGmallAspect(joinPoint);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//从缓存中获取了数据</span></span><br><span class="line">                <span class="keyword">return</span> object;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            throwable.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//兜底的方法--查询数据库，实际上执行方法体就是查询数据库</span></span><br><span class="line">        <span class="keyword">return</span> joinPoint.proceed(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从缓存中获取数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> signature</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Object <span class="title function_">cacheHit</span><span class="params">(String key, MethodSignature signature)</span> &#123;</span><br><span class="line">        <span class="comment">//获取数据--存储的时候，转换成Json字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">strJson</span> <span class="operator">=</span> (String) redisTemplate.opsForValue().get(key);</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span>(!StringUtil.isEmpty(strJson))&#123;</span><br><span class="line">            <span class="comment">//获取当前方法的返回值类型</span></span><br><span class="line">            <span class="type">Class</span> <span class="variable">returnType</span> <span class="operator">=</span> signature.getReturnType();</span><br><span class="line">            <span class="comment">//将字符串转换成指定的类型</span></span><br><span class="line">            <span class="keyword">return</span> JSON.parseObject(strJson,returnType);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>MySQL基本语句</title>
    <url>/posts/36371deb/</url>
    <content><![CDATA[<p>基础语法与函数的使用以及连接查询和常用场景</p>
<span id="more"></span>

<h4 id="一、MySQL增删改查基本语法"><a href="#一、MySQL增删改查基本语法" class="headerlink" title="一、MySQL增删改查基本语法"></a>一、MySQL增删改查基本语法</h4><h6 id="1、新增"><a href="#1、新增" class="headerlink" title="1、新增"></a>1、新增</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--插入一条</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>(<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>字段<span class="number">3</span><span class="operator">&gt;</span>,...) <span class="keyword">values</span>(<span class="operator">&lt;</span>值<span class="number">1</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>值<span class="number">2</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>值<span class="number">3</span><span class="operator">&gt;</span>...);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">values</span>(<span class="operator">&lt;</span>值<span class="number">1</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>值<span class="number">2</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>值<span class="number">3</span><span class="operator">&gt;</span>...);</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入多条</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">VALUES</span> (<span class="operator">&lt;</span>值<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">2</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">3</span><span class="operator">&gt;</span>), (<span class="operator">&lt;</span>值<span class="number">4</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">5</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">6</span><span class="operator">&gt;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> (<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">3</span><span class="operator">&gt;</span>) <span class="keyword">VALUES</span> (<span class="operator">&lt;</span>值<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">2</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">3</span><span class="operator">&gt;</span>), (<span class="operator">&lt;</span>值<span class="number">4</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">5</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>值<span class="number">6</span><span class="operator">&gt;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--将查询结果插入新表</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--将查询部分字段插入新表：</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> (<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>) <span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">3</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>字段<span class="number">4</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--复制表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="2、删除"><a href="#2、删除" class="headerlink" title="2、删除"></a>2、删除</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--按照条件删除</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--全部删除</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure>

<h6 id="3、修改"><a href="#3、修改" class="headerlink" title="3、修改"></a>3、修改</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--按条件修改</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>新的值<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--全部修改</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>新的值<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--修改多个字段</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>值<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>值<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--使一列的值与另一列的值相等:</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure>

<h6 id="4、查询"><a href="#4、查询" class="headerlink" title="4、查询"></a>4、查询</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--去重查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--条件查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> 字段 <span class="operator">&lt;</span>比较运算符<span class="operator">&gt;</span> 值;</span><br><span class="line"></span><br><span class="line"><span class="comment">--IN:</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">IN</span> (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--BETWEEN AND：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">BETWEEN</span> <span class="number">1</span> <span class="keyword">AND</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--NOT NULL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--AND / OR：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">3</span> <span class="keyword">AND</span> name <span class="operator">=</span> <span class="string">&#x27;ming&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--模糊查询(%为通配符，_为匹配任意一个字符，[charlist]为字符列中的任意单个字符)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="keyword">LIKE</span> <span class="string">&#x27;%XXX%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--正则匹配查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> REGEXP <span class="string">&#x27;^[aeiou]|ok$&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--起别名 AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="keyword">AS</span> <span class="operator">&lt;</span>别名<span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--合并两张表并去除重复值：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">UNION</span> <span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--合并两张表非去重：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--分组：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>, <span class="built_in">COUNT</span>(<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>), <span class="built_in">COUNT</span>(<span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--分组 + 条件：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--排序查询，正序ASC，逆序DESC：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--限制查询，从索引m开始，限制查n条：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="keyword">DESC</span> LIMIT m n;</span><br></pre></td></tr></table></figure>

<h4 id="二、函数"><a href="#二、函数" class="headerlink" title="二、函数"></a>二、函数</h4><h6 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--统计符合条件的行数：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">&gt;</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--统计列中非空行数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--统计列中非重复非空行数：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--统计列中的最大值和最小值：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--统计求和：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--求平均值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--分组合并：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>, GROUP_CONCAT(<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span>...) <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure>

<h4 id="三、连表查询"><a href="#三、连表查询" class="headerlink" title="三、连表查询"></a>三、连表查询</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--内连接：</span></span><br><span class="line"><span class="keyword">SELECT</span> a.<span class="operator">*</span>, b.<span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">AS</span> a <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">AS</span> b <span class="keyword">ON</span> a.id <span class="operator">=</span> b.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--左连接：</span></span><br><span class="line"><span class="keyword">SELECT</span> a.<span class="operator">*</span>, b.<span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">AS</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">AS</span> b <span class="keyword">ON</span> a.id <span class="operator">=</span> b.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--右连接：</span></span><br><span class="line"><span class="keyword">SELECT</span> a.<span class="operator">*</span>, b.<span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">AS</span> a <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">AS</span> b <span class="keyword">ON</span> a.id <span class="operator">=</span> b.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--子查询：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">IN</span> (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> id <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">1</span>);</span><br></pre></td></tr></table></figure>

<h4 id="四、常用场景"><a href="#四、常用场景" class="headerlink" title="四、常用场景"></a>四、常用场景</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.字符串替换：</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> REPLACE(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>, str1, str2);</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.根据某一列删除表中重复数据（保留id小的数据）：</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="built_in">MIN</span>(id) <span class="keyword">AS</span> id <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>重复列<span class="operator">&gt;</span>) <span class="keyword">AS</span> t);</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.根据某一列删除表中重复数据（保留id大的数据）：</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">WHERE</span> id <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(id) <span class="keyword">AS</span> id <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>重复列<span class="operator">&gt;</span>) <span class="keyword">AS</span> t);</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.三个表的连表查询：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">AS</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">AS</span> b <span class="keyword">ON</span> a.id <span class="operator">=</span> b.id) <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="operator">&lt;</span>表名<span class="number">3</span><span class="operator">&gt;</span> <span class="keyword">AS</span> c <span class="keyword">ON</span> a.id <span class="operator">=</span> c.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.排除某个表中的一列，查找其他所有列：</span></span><br><span class="line"><span class="keyword">SELECT</span> GROUP_CONCAT(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span> SEPARATOR <span class="string">&#x27;,&#x27;</span>) <span class="keyword">FROM</span> information_schema.COLUMNS <span class="keyword">WHERE</span> table_name <span class="operator">=</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">AND</span> column_name <span class="operator">!=</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.去掉某一列中的括号及内容：</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> <span class="operator">=</span> REPLACE(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>, <span class="built_in">SUBSTRING</span>(<span class="operator">&lt;</span>字段<span class="operator">&gt;</span>, LOCATE(<span class="string">&#x27;(&#x27;</span>, <span class="operator">&lt;</span>字段<span class="operator">&gt;</span>), LOCATE(<span class="string">&#x27;)&#x27;</span>, <span class="operator">&lt;</span>字段<span class="operator">&gt;</span>)<span class="operator">-</span>LOCATE(<span class="string">&#x27;(&#x27;</span>, <span class="operator">&lt;</span>字段<span class="operator">&gt;</span>)<span class="operator">+</span><span class="number">1</span>), <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.根据两个表的相同列更新另一个表中的另一列数据：</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="operator">&lt;</span>表名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">AS</span> A, <span class="operator">&lt;</span>表名<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">AS</span> B <span class="keyword">SET</span> A.<span class="operator">&lt;</span>字段<span class="number">1</span><span class="operator">&gt;</span> <span class="operator">=</span> B.<span class="operator">&lt;</span>字段<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">WHERE</span> A.<span class="operator">&lt;</span>字段<span class="number">3</span><span class="operator">&gt;</span> <span class="operator">=</span> B.<span class="operator">&lt;</span>字段<span class="number">4</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--8.查询数据库中的表名及字段信息：</span></span><br><span class="line"># 查询当前数据库</span><br><span class="line"><span class="keyword">SELECT</span> DATABASE();</span><br><span class="line"># 查询当前数据库中的所有表名</span><br><span class="line"><span class="keyword">SELECT</span> TABLE_NAME <span class="keyword">FROM</span> information_schema.TABLES <span class="keyword">WHERE</span> TABLE_SCHEMA <span class="operator">=</span> (<span class="keyword">SELECT</span> DATABASE()) <span class="keyword">AND</span> TABLE_TYPE<span class="operator">=</span><span class="string">&#x27;BASE TABLE&#x27;</span>;</span><br><span class="line"># 查询指定数据库中的所有表名</span><br><span class="line"><span class="keyword">SELECT</span> TABLE_NAME <span class="keyword">FROM</span> information_schema.TABLES <span class="keyword">WHERE</span> TABLE_SCHEMA<span class="operator">=</span><span class="string">&#x27;&lt;数据库名&gt;&#x27;</span> <span class="keyword">AND</span> TABLE_TYPE<span class="operator">=</span><span class="string">&#x27;BASE TABLE&#x27;</span>;</span><br><span class="line"># 查询指定数据库中指定表名的字段信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> information_schema.COLUMNS <span class="keyword">WHERE</span> TABLE_SCHEMA<span class="operator">=</span><span class="string">&#x27;&lt;数据库名&gt;&#x27;</span> <span class="keyword">and</span> TABLE_NAME<span class="operator">=</span><span class="string">&#x27;&lt;表名&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>MySQL相关</title>
    <url>/posts/e31b1d8d/</url>
    <content><![CDATA[<h5 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h5><span id="more"></span>

<p>参考csdn上的：</p>
<p><a href="https://blog.csdn.net/adminpd/article/details/122910606">https://blog.csdn.net/adminpd/article/details/122910606</a></p>
]]></content>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis相关</title>
    <url>/posts/a1d47c8e/</url>
    <content><![CDATA[<h6 id="1、Redis常用在什么时候，为什么要用Redis"><a href="#1、Redis常用在什么时候，为什么要用Redis" class="headerlink" title="1、Redis常用在什么时候，为什么要用Redis"></a>1、Redis常用在什么时候，为什么要用Redis</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先需要知道Redis是作为缓存来使用的，那么为什么要使用缓存技术呢，因为Redis是基于内存操作，使用多路IO，以及简单的数据结构并且是单线程的，可以使其响应起来迅速，也就是反应快。</span><br><span class="line">那么在日常开发中当我们遇到一个比较热点的东西或者访问量较大的东西时就可以使用Redis来作为缓存，存放这些热点数据。</span><br><span class="line">它的使用场景：</span><br><span class="line">	1、作为缓存</span><br><span class="line">	2、做排行榜，用到了Redis提供的zset数据结构</span><br><span class="line">	3、计数器，例如商品的浏览数就可以使用Redis的incr命令来实现计数功能</span><br><span class="line">	4、分布式会话，集群模式下作为session共享的容器，可以实现单点登录功能</span><br><span class="line">	5、实现分布式锁，公司中使用了分布式微服务技术就会涉及到分布式事务问题，可以使用Redis的setNX命令来实现（全局ID，减库存，秒杀）</span><br><span class="line">	6、社交网络，实现关注被关注的功能，用到了Redis的hash结构</span><br><span class="line">	7、作为消息队列，实现将本地缓存共享，用了发布订阅模式（比较简单）</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h6 id="2、项目中使用Redis的缺点以及解决方法"><a href="#2、项目中使用Redis的缺点以及解决方法" class="headerlink" title="2、项目中使用Redis的缺点以及解决方法"></a>2、项目中使用Redis的缺点以及解决方法</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、使用了缓存技术后会有数据双写一致性的问题：</span><br><span class="line">	解决办法（保证最终一致性）可以使用延时双删，先删除一次缓存，然后让这个线程休眠一段时间（根据业务来判断需要休眠多少时间），然后再删除一次缓存。</span><br><span class="line">	（保证强一致性）就可以使用一个分布式锁</span><br><span class="line">2、缓存雪崩问题：</span><br><span class="line">	就是可能会有大量的key失效，让这些请求直接到了数据库导致数据库崩溃</span><br><span class="line">	解决办法：①、给每一个key设置一个随机的过期时间</span><br><span class="line">		②、搭建Redis集群</span><br><span class="line">3、缓存击穿问题：</span><br><span class="line">	就是没有这个数据，缓存中和数据库中都没有这个数据，黑客可能会一直请求这个没有的资源，导致数据库连接异常。</span><br><span class="line">	解决办法：①、可以使用布隆过滤器来解决。</span><br><span class="line">		②、或者来一个没有的请求就给他设置一个null值，但是这种会耗内存，而且治标不治本</span><br><span class="line">4、缓存穿透问题：</span><br><span class="line">	就是可能会有一个热点key突然失效</span><br><span class="line">	解决办法：可以使用分布式锁来解决</span><br></pre></td></tr></table></figure>

<h6 id="3、Redis的持久化"><a href="#3、Redis的持久化" class="headerlink" title="3、Redis的持久化"></a>3、Redis的持久化</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、RDB持久化</span><br><span class="line">	rdb持久化就相当于一个快照形式，恢复数据的比较快</span><br><span class="line">	缺点：1、不保证数据完整性，会丢失最后一次快照以后更改的所有数据；</span><br><span class="line">		2、父进程在fork子进程的时候如果主进程比较大会阻塞；</span><br><span class="line"></span><br><span class="line">2、AOF持久化</span><br><span class="line">	是相当于日志的形式，将操作以命令行的形式存储在硬盘，但是保存的文件较大，当文件较大的时候会重写就是将多条操作和一条操作最终结果一样就改为一条</span><br><span class="line">	</span><br><span class="line">3、用的时候推荐混合使用</span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>chenge-first-blog</title>
    <url>/posts/4c3bfe5e/</url>
    <content><![CDATA[<p>大家好，我是瑾宸~~~<br>练习使用gitHub搭建博客</p>
<span id="more"></span>

]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<span id="more"></span>

<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>开发常用网站</title>
    <url>/posts/4196d54/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mybatis:  https://mybatis.org/mybatis-3/index.html</span><br><span class="line">maven仓库：    https://mvnrepository.com/</span><br><span class="line">程序员导航：   https://www.cxy521.com/</span><br><span class="line">bootcss网站：    https://v3.bootcss.com/</span><br><span class="line">前端element：   https://element.eleme.cn/#/zh-CN</span><br><span class="line">mybatis-plus:    https://baomidou.com/</span><br><span class="line">jquery:    https://jquery.com/</span><br><span class="line">npm:   https://www.npmjs.com/</span><br><span class="line">rabbitMQ:    https://www.rabbitmq.com/</span><br><span class="line">jquery:    https://jquery.com/</span><br><span class="line">前端echarts：   https://echarts.apache.org/zh/index.html</span><br><span class="line">sdk社区：    https://www.sdk.cn/</span><br><span class="line">在线图库：    https://wallhaven.cc/</span><br><span class="line">系统镜像和工具网站：    https://msdn.itellyou.cn/</span><br><span class="line">gradle包：  https://services.gradle.org/distributions/</span><br><span class="line">软仓：   https://www.ruancang.net/#/sim?page=0&amp;id=7&amp;_=1673063763053</span><br><span class="line">奇迹秀工具箱：    https://www.qijishow.com/down/index.html</span><br><span class="line">hexo网站搭建：   https://hexo.io/zh-cn/</span><br><span class="line">获取虚拟手机短信注册国外软件用：   https://sms-activate.org/getNumber#</span><br></pre></td></tr></table></figure>

<span id="more"></span>

]]></content>
      <tags>
        <tag>实用网站</tag>
      </tags>
  </entry>
  <entry>
    <title>网络是怎样连接的阅读笔记</title>
    <url>/posts/64ffd4a7/</url>
    <content><![CDATA[<p>网络是怎样连接的阅读笔记</p>
<span id="more"></span>

<h5 id="1-1：生成HTTP请求消息"><a href="#1-1：生成HTTP请求消息" class="headerlink" title="1.1：生成HTTP请求消息"></a>1.1：生成HTTP请求消息</h5><h6 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h6><p>​		网址头部除了有http以外还有“ftp”，“file”，“mailto”等</p>
<p>​		FTP服务器：是文件传输协议，用在文件的上传和下载</p>
<p>​		http：用来访问web服务器，超文本传输协议</p>
<p>​		mailto：是用来传输邮件的协议</p>
<p>图1.1列举了常见的几种URL，URL中会包含服务器的域名和要访问的文件的路径等</p>
<p>发送邮件的URL包含收件人的邮件地址，根据需要URL中还会包含用户名、密码、服务器端口号等</p>
<p><img src="https://res.weread.qq.com/wrepub/epub_907755_17" alt="&quot;不同URL&quot;"></p>
<h6 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h6><p>​		http开头的URL可能以“&#x2F;”结尾比如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://wzf5251.github.io/about/</span><br><span class="line"></span><br><span class="line">/about/后面省略的话会访问默认文件index.html或者default.html</span><br></pre></td></tr></table></figure>

<p>​		http开头的URL也可能是这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://wzf5251.github.io</span><br><span class="line"></span><br><span class="line">把“/”省略了这种会直接访问根目录下的index.html或者default.html</span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>订单模块关键问题</title>
    <url>/posts/29484f57/</url>
    <content><![CDATA[<p>订单模块的各种问题考虑：</p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、首先要选择准备支持的支付方式（微信、支付宝......）</span><br><span class="line">2、选择好支付方式后要考虑用户是否会重复下单：</span><br><span class="line">	例如用户利用浏览器的回退功能再次下单：</span><br><span class="line">		可以生成一个流水号，将流水号存在Redis中以用户的id为key ，流水号作为value，同时将生成的流水号从页面当作参数传给下单的接口，下单接口拿着流水号去redis里面比较，如果一样那么就下单，如果不一样就不能下单，当用户下单后就将redis里面的流水号删除，当用户回退浏览器再次下单也不会比对成功。</span><br><span class="line">3、要考虑之前的商品价格是否变动：</span><br><span class="line">	如果价格发生了改变提示用户价格改变重新选择，它检查价格的时候发现改变会即时将新价格更新到购物车缓存中，所以提示用户重新选择就可以。</span><br><span class="line">4、要考虑商品库存问题：</span><br><span class="line">	当库存不足的时候提示商品库存不足。</span><br><span class="line">5、当这些都没有问题的时候，保存订单信息，生成一个订单交易编号采用随机字符串+时间戳+随机数</span><br><span class="line">6、需要考虑订单未支付时的有效时间：利用MQ发送延时消息</span><br><span class="line">7、使用支付宝支付：</span><br><span class="line">	需要创建一个AlipayClient对象根据支付宝的开发文档来操作就可以</span><br><span class="line">8、支付信息表需要有的数据：</span><br><span class="line">	订单ID、用户ID、订单交易编号、支付宝交易号、支付类型、支付金额、支付状态、回调时间、回调内容</span><br><span class="line">	这个表的作用就是用来记账，看支付宝收了多少钱，防止后续的一系列问题</span><br><span class="line">9、当调用支付宝接口的时候会返回一个支付页面</span><br><span class="line">10、提供的同步回调一般是用来给用户看的让用户知道支付成功了</span><br><span class="line">11、异步回调是为了调用自己的平台接口通知支付结果，修改自己系统中表的信息</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
